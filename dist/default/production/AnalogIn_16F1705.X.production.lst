

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Sep 15 11:14:26 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1705 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000E                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  008C                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010E                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011C                     	;# 
   124  018C                     	;# 
   125  018E                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0197                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020E                     	;# 
   162  0211                     	;# 
   163  0211                     	;# 
   164  0212                     	;# 
   165  0212                     	;# 
   166  0213                     	;# 
   167  0213                     	;# 
   168  0214                     	;# 
   169  0214                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  028C                     	;# 
   179  028E                     	;# 
   180  0291                     	;# 
   181  0291                     	;# 
   182  0292                     	;# 
   183  0293                     	;# 
   184  0293                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  029A                     	;# 
   190  029E                     	;# 
   191  030C                     	;# 
   192  030E                     	;# 
   193  038C                     	;# 
   194  038E                     	;# 
   195  0391                     	;# 
   196  0392                     	;# 
   197  0393                     	;# 
   198  0397                     	;# 
   199  0398                     	;# 
   200  0399                     	;# 
   201  0415                     	;# 
   202  0416                     	;# 
   203  0417                     	;# 
   204  041C                     	;# 
   205  041D                     	;# 
   206  041E                     	;# 
   207  0511                     	;# 
   208  0515                     	;# 
   209  0617                     	;# 
   210  0618                     	;# 
   211  0619                     	;# 
   212  0619                     	;# 
   213  061A                     	;# 
   214  061B                     	;# 
   215  061C                     	;# 
   216  061C                     	;# 
   217  0691                     	;# 
   218  0692                     	;# 
   219  0693                     	;# 
   220  0694                     	;# 
   221  0695                     	;# 
   222  0696                     	;# 
   223  0697                     	;# 
   224  0698                     	;# 
   225  0699                     	;# 
   226  069A                     	;# 
   227  069B                     	;# 
   228  069C                     	;# 
   229  069D                     	;# 
   230  069E                     	;# 
   231  069F                     	;# 
   232  0E0F                     	;# 
   233  0E10                     	;# 
   234  0E11                     	;# 
   235  0E12                     	;# 
   236  0E13                     	;# 
   237  0E14                     	;# 
   238  0E15                     	;# 
   239  0E17                     	;# 
   240  0E20                     	;# 
   241  0E21                     	;# 
   242  0E22                     	;# 
   243  0E24                     	;# 
   244  0E25                     	;# 
   245  0E28                     	;# 
   246  0E29                     	;# 
   247  0E2A                     	;# 
   248  0E2B                     	;# 
   249  0E90                     	;# 
   250  0E91                     	;# 
   251  0E92                     	;# 
   252  0E94                     	;# 
   253  0E95                     	;# 
   254  0EA0                     	;# 
   255  0EA1                     	;# 
   256  0EA2                     	;# 
   257  0EA3                     	;# 
   258  0EA4                     	;# 
   259  0EA5                     	;# 
   260  0F0F                     	;# 
   261  0F10                     	;# 
   262  0F11                     	;# 
   263  0F12                     	;# 
   264  0F13                     	;# 
   265  0F14                     	;# 
   266  0F15                     	;# 
   267  0F16                     	;# 
   268  0F17                     	;# 
   269  0F18                     	;# 
   270  0F19                     	;# 
   271  0F1A                     	;# 
   272  0F1B                     	;# 
   273  0F1C                     	;# 
   274  0F1D                     	;# 
   275  0F1E                     	;# 
   276  0F1F                     	;# 
   277  0F20                     	;# 
   278  0F21                     	;# 
   279  0F22                     	;# 
   280  0F23                     	;# 
   281  0F24                     	;# 
   282  0F25                     	;# 
   283  0F26                     	;# 
   284  0F27                     	;# 
   285  0F28                     	;# 
   286  0F29                     	;# 
   287  0F2A                     	;# 
   288  0F2B                     	;# 
   289  0F2C                     	;# 
   290  0F2D                     	;# 
   291  0F9E                     	;# 
   292  0FE4                     	;# 
   293  0FE5                     	;# 
   294  0FE6                     	;# 
   295  0FE7                     	;# 
   296  0FE8                     	;# 
   297  0FE9                     	;# 
   298  0FEA                     	;# 
   299  0FEB                     	;# 
   300  0FED                     	;# 
   301  0FEE                     	;# 
   302  0FEF                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000E                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  008C                     	;# 
   330  008E                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0097                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009A                     	;# 
   340  009B                     	;# 
   341  009B                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  009F                     	;# 
   346  010C                     	;# 
   347  010E                     	;# 
   348  0111                     	;# 
   349  0112                     	;# 
   350  0113                     	;# 
   351  0114                     	;# 
   352  0115                     	;# 
   353  0116                     	;# 
   354  0117                     	;# 
   355  0118                     	;# 
   356  0119                     	;# 
   357  011C                     	;# 
   358  018C                     	;# 
   359  018E                     	;# 
   360  0191                     	;# 
   361  0191                     	;# 
   362  0192                     	;# 
   363  0193                     	;# 
   364  0193                     	;# 
   365  0194                     	;# 
   366  0195                     	;# 
   367  0196                     	;# 
   368  0197                     	;# 
   369  0199                     	;# 
   370  0199                     	;# 
   371  0199                     	;# 
   372  019A                     	;# 
   373  019A                     	;# 
   374  019A                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019B                     	;# 
   378  019B                     	;# 
   379  019B                     	;# 
   380  019C                     	;# 
   381  019C                     	;# 
   382  019C                     	;# 
   383  019D                     	;# 
   384  019D                     	;# 
   385  019D                     	;# 
   386  019E                     	;# 
   387  019E                     	;# 
   388  019E                     	;# 
   389  019F                     	;# 
   390  019F                     	;# 
   391  019F                     	;# 
   392  019F                     	;# 
   393  019F                     	;# 
   394  020C                     	;# 
   395  020E                     	;# 
   396  0211                     	;# 
   397  0211                     	;# 
   398  0212                     	;# 
   399  0212                     	;# 
   400  0213                     	;# 
   401  0213                     	;# 
   402  0214                     	;# 
   403  0214                     	;# 
   404  0215                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0216                     	;# 
   409  0216                     	;# 
   410  0217                     	;# 
   411  0217                     	;# 
   412  028C                     	;# 
   413  028E                     	;# 
   414  0291                     	;# 
   415  0291                     	;# 
   416  0292                     	;# 
   417  0293                     	;# 
   418  0293                     	;# 
   419  0298                     	;# 
   420  0298                     	;# 
   421  0299                     	;# 
   422  029A                     	;# 
   423  029A                     	;# 
   424  029E                     	;# 
   425  030C                     	;# 
   426  030E                     	;# 
   427  038C                     	;# 
   428  038E                     	;# 
   429  0391                     	;# 
   430  0392                     	;# 
   431  0393                     	;# 
   432  0397                     	;# 
   433  0398                     	;# 
   434  0399                     	;# 
   435  0415                     	;# 
   436  0416                     	;# 
   437  0417                     	;# 
   438  041C                     	;# 
   439  041D                     	;# 
   440  041E                     	;# 
   441  0511                     	;# 
   442  0515                     	;# 
   443  0617                     	;# 
   444  0618                     	;# 
   445  0619                     	;# 
   446  0619                     	;# 
   447  061A                     	;# 
   448  061B                     	;# 
   449  061C                     	;# 
   450  061C                     	;# 
   451  0691                     	;# 
   452  0692                     	;# 
   453  0693                     	;# 
   454  0694                     	;# 
   455  0695                     	;# 
   456  0696                     	;# 
   457  0697                     	;# 
   458  0698                     	;# 
   459  0699                     	;# 
   460  069A                     	;# 
   461  069B                     	;# 
   462  069C                     	;# 
   463  069D                     	;# 
   464  069E                     	;# 
   465  069F                     	;# 
   466  0E0F                     	;# 
   467  0E10                     	;# 
   468  0E11                     	;# 
   469  0E12                     	;# 
   470  0E13                     	;# 
   471  0E14                     	;# 
   472  0E15                     	;# 
   473  0E17                     	;# 
   474  0E20                     	;# 
   475  0E21                     	;# 
   476  0E22                     	;# 
   477  0E24                     	;# 
   478  0E25                     	;# 
   479  0E28                     	;# 
   480  0E29                     	;# 
   481  0E2A                     	;# 
   482  0E2B                     	;# 
   483  0E90                     	;# 
   484  0E91                     	;# 
   485  0E92                     	;# 
   486  0E94                     	;# 
   487  0E95                     	;# 
   488  0EA0                     	;# 
   489  0EA1                     	;# 
   490  0EA2                     	;# 
   491  0EA3                     	;# 
   492  0EA4                     	;# 
   493  0EA5                     	;# 
   494  0F0F                     	;# 
   495  0F10                     	;# 
   496  0F11                     	;# 
   497  0F12                     	;# 
   498  0F13                     	;# 
   499  0F14                     	;# 
   500  0F15                     	;# 
   501  0F16                     	;# 
   502  0F17                     	;# 
   503  0F18                     	;# 
   504  0F19                     	;# 
   505  0F1A                     	;# 
   506  0F1B                     	;# 
   507  0F1C                     	;# 
   508  0F1D                     	;# 
   509  0F1E                     	;# 
   510  0F1F                     	;# 
   511  0F20                     	;# 
   512  0F21                     	;# 
   513  0F22                     	;# 
   514  0F23                     	;# 
   515  0F24                     	;# 
   516  0F25                     	;# 
   517  0F26                     	;# 
   518  0F27                     	;# 
   519  0F28                     	;# 
   520  0F29                     	;# 
   521  0F2A                     	;# 
   522  0F2B                     	;# 
   523  0F2C                     	;# 
   524  0F2D                     	;# 
   525  0F9E                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  000E                     _PORTC	set	14
   538  000C                     _PORTA	set	12
   539  008D                     _RCIF	set	141
   540  008C                     _TXIF	set	140
   541  009B                     _ADRESL	set	155
   542  009C                     _ADRESH	set	156
   543  009D                     _ADCON0	set	157
   544  009E                     _ADCON1	set	158
   545  008E                     _TRISC	set	142
   546  008C                     _TRISA	set	140
   547  0099                     _OSCCON	set	153
   548  04E9                     _GO_nDONE	set	1257
   549  0199                     _RC1REG	set	409
   550  019A                     _TX1REG	set	410
   551  019B                     _SP1BRGL	set	411
   552  019C                     _SP1BRGH	set	412
   553  019D                     _RC1STA	set	413
   554  019E                     _TX1STA	set	414
   555  018E                     _ANSELC	set	398
   556  018C                     _ANSELA	set	396
   557  0CFB                     _BRG16	set	3323
   558  0E24                     _RXPPS	set	3620
   559  0E90                     _RA0PPS	set	3728
   560                           
   561                           	psect	stringtext1
   562  0800                     __pstringtext1:
   563  0800                     STR_1:
   564  0800  3425               	retlw	37	;'%'
   565  0801  3463               	retlw	99	;'c'
   566  0802  343A               	retlw	58	;':'
   567  0803  3425               	retlw	37	;'%'
   568  0804  3464               	retlw	100	;'d'
   569  0805  342C               	retlw	44	;','
   570  0806  3400               	retlw	0
   571                           
   572                           	psect	stringtext2
   573  0000                     __pstringtext2:
   574                           
   575                           	psect	cinit
   576  07F5                     start_initialization:	
   577                           ; #config settings
   578                           
   579  07F5                     __initialization:
   580                           
   581                           ; Clear objects allocated to BANK1
   582  07F5  30A0               	movlw	low __pbssBANK1
   583  07F6  0084               	movwf	4
   584  07F7  3000               	movlw	high __pbssBANK1
   585  07F8  0085               	movwf	5
   586  07F9  3028               	movlw	40
   587  07FA  3180  205E  3187   	fcall	clear_ram0
   588  07FD                     end_of_initialization:	
   589                           ;End of C runtime variable initialization code
   590                           
   591  07FD                     __end_of__initialization:
   592  07FD  0020               	movlb	0
   593  07FE  3181  2977         	ljmp	_main	;jump to C main() function
   594                           
   595                           	psect	bssBANK1
   596  00A0                     __pbssBANK1:
   597  00A0                     _nout:
   598  00A0                     	ds	2
   599  00A2                     _width:
   600  00A2                     	ds	2
   601  00A4                     _prec:
   602  00A4                     	ds	2
   603  00A6                     _flags:
   604  00A6                     	ds	2
   605  00A8                     _dbuf:
   606  00A8                     	ds	32
   607                           
   608                           	psect	clrtext
   609  005E                     clear_ram0:	
   610                           ;	Called with FSR0 containing the base address, and
   611                           ;	WREG with the size to clear
   612                           
   613  005E  0064               	clrwdt	;clear the watchdog before getting into this loop
   614  005F                     clrloop0:
   615  005F  0180               	clrf	0	;clear RAM location pointed to by FSR
   616  0060  3101               	addfsr 0,1
   617  0061  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   618  0062  285F               	goto	clrloop0	;have we reached the end yet?
   619  0063  3400               	retlw	0	;all done for this memory range, return
   620                           
   621                           	psect	cstackBANK1
   622  00C8                     __pcstackBANK1:
   623  00C8                     	ds	2
   624  00CA                     sprintf@ap:
   625                           
   626                           ; 1 bytes @ 0x2
   627  00CA                     	ds	1
   628  00CB                     sprintf@s:
   629                           
   630                           ; 1 bytes @ 0x3
   631  00CB                     	ds	1
   632  00CC                     sprintf@f:
   633                           
   634                           ; 5 bytes @ 0x4
   635  00CC                     	ds	5
   636  00D1                     main@valStr:
   637                           
   638                           ; 16 bytes @ 0x9
   639  00D1                     	ds	16
   640  00E1                     main@val:
   641                           
   642                           ; 2 bytes @ 0x19
   643  00E1                     	ds	2
   644  00E3                     main@c:
   645                           
   646                           ; 1 bytes @ 0x1B
   647  00E3                     	ds	1
   648                           
   649                           	psect	cstackCOMMON
   650  0070                     __pcstackCOMMON:
   651  0070                     ?_serial_getch:
   652  0070                     ??_serial_getch:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_serial_print:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_putch:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ??_putch:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_main:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_serial_putch:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??_serial_putch:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??___aodiv:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??___aomod:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_analogRead:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_fputc:	
   683                           ; 2 bytes @ 0x0
   684                           
   685  0070                     ?_strlen:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0070                     ?___lldiv:	
   689                           ; 2 bytes @ 0x0
   690                           
   691  0070                     serial_putch@byte:	
   692                           ; 4 bytes @ 0x0
   693                           
   694  0070                     putch@c:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     fputc@c:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ___lldiv@divisor:	
   701                           ; 2 bytes @ 0x0
   702                           
   703                           
   704                           ; 4 bytes @ 0x0
   705  0070                     	ds	1
   706  0071                     ??_serial_print:
   707  0071                     ___aodiv@counter:	
   708                           ; 1 bytes @ 0x1
   709                           
   710  0071                     ___aomod@counter:	
   711                           ; 1 bytes @ 0x1
   712                           
   713                           
   714                           ; 1 bytes @ 0x1
   715  0071                     	ds	1
   716  0072                     ??_analogRead:
   717  0072                     ??_strlen:	
   718                           ; 1 bytes @ 0x2
   719                           
   720  0072                     ___aodiv@sign:	
   721                           ; 1 bytes @ 0x2
   722                           
   723  0072                     ___aomod@sign:	
   724                           ; 1 bytes @ 0x2
   725                           
   726  0072                     fputc@fp:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  0072                     serial_print@i:	
   730                           ; 1 bytes @ 0x2
   731                           
   732                           
   733                           ; 2 bytes @ 0x2
   734  0072                     	ds	1
   735  0073                     ??_fputc:
   736  0073                     ?_abs:	
   737                           ; 1 bytes @ 0x3
   738                           
   739  0073                     strlen@a:	
   740                           ; 2 bytes @ 0x3
   741                           
   742  0073                     abs@a:	
   743                           ; 1 bytes @ 0x3
   744                           
   745  0073                     ___aodiv@quotient:	
   746                           ; 2 bytes @ 0x3
   747                           
   748                           
   749                           ; 8 bytes @ 0x3
   750  0073                     	ds	1
   751  0074                     serial_print@str:
   752  0074                     strlen@s:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0074                     ___lldiv@dividend:	
   756                           ; 1 bytes @ 0x4
   757                           
   758                           
   759                           ; 4 bytes @ 0x4
   760  0074                     	ds	1
   761  0075                     ??_abs:
   762                           
   763                           ; 1 bytes @ 0x5
   764  0075                     	ds	3
   765  0078                     ??___lldiv:
   766  0078                     ?_fputs:	
   767                           ; 1 bytes @ 0x8
   768                           
   769  0078                     ?_ctoa:	
   770                           ; 2 bytes @ 0x8
   771                           
   772  0078                     analogRead@pin:	
   773                           ; 2 bytes @ 0x8
   774                           
   775  0078                     ctoa@c:	
   776                           ; 1 bytes @ 0x8
   777                           
   778  0078                     fputs@fp:	
   779                           ; 1 bytes @ 0x8
   780                           
   781                           
   782                           ; 1 bytes @ 0x8
   783  0078                     	ds	1
   784  0079                     ??_fputs:
   785  0079                     analogRead@val:	
   786                           ; 1 bytes @ 0x9
   787                           
   788  0079                     ___lldiv@quotient:	
   789                           ; 2 bytes @ 0x9
   790                           
   791                           
   792                           ; 4 bytes @ 0x9
   793  0079                     	ds	1
   794  007A                     ??_ctoa:
   795                           
   796                           ; 1 bytes @ 0xA
   797  007A                     	ds	2
   798  007C                     ??_pad:
   799                           
   800                           ; 1 bytes @ 0xC
   801  007C                     	ds	1
   802  007D                     ??_sprintf:
   803  007D                     ___lldiv@counter:	
   804                           ; 1 bytes @ 0xD
   805                           
   806                           
   807                           ; 1 bytes @ 0xD
   808  007D                     	ds	1
   809                           
   810                           	psect	cstackBANK0
   811  0020                     __pcstackBANK0:
   812  0020                     ?_init:
   813  0020                     ?___aodiv:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0020                     ?___aomod:	
   817                           ; 8 bytes @ 0x0
   818                           
   819  0020                     fputs@c:	
   820                           ; 8 bytes @ 0x0
   821                           
   822  0020                     ctoa@l:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0020                     init@baudrate:	
   826                           ; 2 bytes @ 0x0
   827                           
   828  0020                     ___aodiv@divisor:	
   829                           ; 4 bytes @ 0x0
   830                           
   831  0020                     ___aomod@divisor:	
   832                           ; 8 bytes @ 0x0
   833                           
   834                           
   835                           ; 8 bytes @ 0x0
   836  0020                     	ds	1
   837  0021                     fputs@i:
   838                           
   839                           ; 2 bytes @ 0x1
   840  0021                     	ds	1
   841  0022                     ctoa@w:
   842                           
   843                           ; 2 bytes @ 0x2
   844  0022                     	ds	1
   845  0023                     fputs@s:
   846                           
   847                           ; 1 bytes @ 0x3
   848  0023                     	ds	1
   849  0024                     ?_pad:
   850  0024                     init@portA:	
   851                           ; 2 bytes @ 0x4
   852                           
   853  0024                     pad@buf:	
   854                           ; 1 bytes @ 0x4
   855                           
   856  0024                     ctoa@fp:	
   857                           ; 1 bytes @ 0x4
   858                           
   859                           
   860                           ; 1 bytes @ 0x4
   861  0024                     	ds	1
   862  0025                     init@portC:
   863  0025                     pad@p:	
   864                           ; 1 bytes @ 0x5
   865                           
   866                           
   867                           ; 2 bytes @ 0x5
   868  0025                     	ds	1
   869  0026                     ??_init:
   870                           
   871                           ; 1 bytes @ 0x6
   872  0026                     	ds	1
   873  0027                     pad@i:
   874                           
   875                           ; 2 bytes @ 0x7
   876  0027                     	ds	1
   877  0028                     ___aodiv@dividend:
   878  0028                     ___aomod@dividend:	
   879                           ; 8 bytes @ 0x8
   880                           
   881                           
   882                           ; 8 bytes @ 0x8
   883  0028                     	ds	1
   884  0029                     pad@w:
   885                           
   886                           ; 2 bytes @ 0x9
   887  0029                     	ds	1
   888  002A                     init@X:
   889                           
   890                           ; 2 bytes @ 0xA
   891  002A                     	ds	1
   892  002B                     pad@fp:
   893                           
   894                           ; 1 bytes @ 0xB
   895  002B                     	ds	5
   896  0030                     ?_dtoa:
   897  0030                     dtoa@d:	
   898                           ; 2 bytes @ 0x10
   899                           
   900                           
   901                           ; 8 bytes @ 0x10
   902  0030                     	ds	8
   903  0038                     ??_dtoa:
   904                           
   905                           ; 1 bytes @ 0x18
   906  0038                     	ds	3
   907  003B                     _dtoa$492:
   908                           
   909                           ; 2 bytes @ 0x1B
   910  003B                     	ds	2
   911  003D                     dtoa@fp:
   912                           
   913                           ; 1 bytes @ 0x1D
   914  003D                     	ds	1
   915  003E                     dtoa@p:
   916                           
   917                           ; 2 bytes @ 0x1E
   918  003E                     	ds	2
   919  0040                     dtoa@w:
   920                           
   921                           ; 2 bytes @ 0x20
   922  0040                     	ds	2
   923  0042                     dtoa@s:
   924                           
   925                           ; 2 bytes @ 0x22
   926  0042                     	ds	2
   927  0044                     dtoa@n:
   928                           
   929                           ; 8 bytes @ 0x24
   930  0044                     	ds	8
   931  004C                     dtoa@i:
   932                           
   933                           ; 2 bytes @ 0x2C
   934  004C                     	ds	2
   935  004E                     ?_vfpfcnvrt:
   936  004E                     vfpfcnvrt@fmt:	
   937                           ; 2 bytes @ 0x2E
   938                           
   939                           
   940                           ; 1 bytes @ 0x2E
   941  004E                     	ds	1
   942  004F                     vfpfcnvrt@ap:
   943                           
   944                           ; 1 bytes @ 0x2F
   945  004F                     	ds	1
   946  0050                     ??_vfpfcnvrt:
   947                           
   948                           ; 1 bytes @ 0x30
   949  0050                     	ds	5
   950  0055                     vfpfcnvrt@ll:
   951                           
   952                           ; 8 bytes @ 0x35
   953  0055                     	ds	8
   954  005D                     vfpfcnvrt@c:
   955                           
   956                           ; 1 bytes @ 0x3D
   957  005D                     	ds	1
   958  005E                     vfpfcnvrt@fp:
   959                           
   960                           ; 1 bytes @ 0x3E
   961  005E                     	ds	1
   962  005F                     ?_vfprintf:
   963  005F                     vfprintf@fmt:	
   964                           ; 2 bytes @ 0x3F
   965                           
   966                           
   967                           ; 2 bytes @ 0x3F
   968  005F                     	ds	2
   969  0061                     vfprintf@ap:
   970                           
   971                           ; 1 bytes @ 0x41
   972  0061                     	ds	1
   973  0062                     ??_vfprintf:
   974                           
   975                           ; 1 bytes @ 0x42
   976  0062                     	ds	2
   977  0064                     vfprintf@fp:
   978                           
   979                           ; 1 bytes @ 0x44
   980  0064                     	ds	1
   981  0065                     vfprintf@cfmt:
   982                           
   983                           ; 2 bytes @ 0x45
   984  0065                     	ds	2
   985  0067                     ?_sprintf:
   986  0067                     sprintf@fmt:	
   987                           ; 2 bytes @ 0x47
   988                           
   989                           
   990                           ; 2 bytes @ 0x47
   991  0067                     	ds	6
   992  006D                     ??_main:
   993                           
   994                           ; 1 bytes @ 0x4D
   995  006D                     	ds	2
   996                           
   997                           	psect	maintext
   998  0177                     __pmaintext:	
   999 ;;
  1000 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1001 ;;
  1002 ;; *************** function _main *****************
  1003 ;; Defined at:
  1004 ;;		line 16 in file "main.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  val             2   25[BANK1 ] unsigned int 
  1009 ;;  c               1   27[BANK1 ] unsigned char 
  1010 ;;  valStr         16    9[BANK1 ] unsigned char [16]
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : B1F/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1021 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  1022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1023 ;;      Totals:         0       2      19       0       0       0       0       0       0       0       0       0       
      +0       0
  1024 ;;Total ram usage:       21 bytes
  1025 ;; Hardware stack levels required when called:    8
  1026 ;; This function calls:
  1027 ;;		_analogRead
  1028 ;;		_init
  1029 ;;		_serial_getch
  1030 ;;		_serial_print
  1031 ;;		_sprintf
  1032 ;; This function is called by:
  1033 ;;		Startup code after reset
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           
  1038                           ;psect for function _main
  1039  0177                     _main:
  1040  0177                     l1492:	
  1041                           ;incstack = 0
  1042                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1043                           
  1044                           
  1045                           ;main.c: 18:     OSCCON = 0b01110000 ;
  1046  0177  3070               	movlw	112
  1047  0178  0021               	movlb	1	; select bank1
  1048  0179  0099               	movwf	25	;volatile
  1049  017A                     l1494:
  1050                           
  1051                           ;main.c: 34:     init(9600, 0b00000100|0b00010000 , 0b00000001|0b00000010|0b00000100|0b0
      +                          0001000);
  1052  017A  3000               	movlw	0
  1053  017B  0020               	movlb	0	; select bank0
  1054  017C  00A3               	movwf	init@baudrate+3
  1055  017D  3000               	movlw	0
  1056  017E  00A2               	movwf	init@baudrate+2
  1057  017F  3025               	movlw	37
  1058  0180  00A1               	movwf	init@baudrate+1
  1059  0181  3080               	movlw	128
  1060  0182  00A0               	movwf	init@baudrate
  1061  0183  3014               	movlw	20
  1062  0184  00ED               	movwf	??_main
  1063  0185  086D               	movf	??_main,w
  1064  0186  00A4               	movwf	init@portA
  1065  0187  300F               	movlw	15
  1066  0188  00EE               	movwf	??_main+1
  1067  0189  086E               	movf	??_main+1,w
  1068  018A  00A5               	movwf	init@portC
  1069  018B  3182  2210  3181   	fcall	_init
  1070  018E                     l1496:
  1071                           
  1072                           ;main.c: 38:         unsigned char c;;main.c: 39:         c = serial_getch();
  1073  018E  3180  2064  3181   	fcall	_serial_getch
  1074  0191  0020               	movlb	0	; select bank0
  1075  0192  00ED               	movwf	??_main
  1076  0193  086D               	movf	??_main,w
  1077  0194  0021               	movlb	1	; select bank1
  1078  0195  00E3               	movwf	main@c^(0+128)
  1079  0196                     l1498:
  1080                           
  1081                           ;main.c: 42:         unsigned int val = analogRead(c-'0');
  1082  0196  0863               	movf	main@c^(0+128),w
  1083  0197  3ED0               	addlw	208
  1084  0198  3181  2145  3181   	fcall	_analogRead
  1085  019B  0871               	movf	?_analogRead+1,w
  1086  019C  0021               	movlb	1	; select bank1
  1087  019D  00E2               	movwf	(main@val+1)^(0+128)
  1088  019E  0870               	movf	?_analogRead,w
  1089  019F  00E1               	movwf	main@val^(0+128)
  1090  01A0                     l1500:
  1091                           
  1092                           ;main.c: 43:         sprintf(valStr,"%c:%d,",c,val);
  1093  01A0  3000               	movlw	low (STR_1| (0+32768))
  1094  01A1  0020               	movlb	0	; select bank0
  1095  01A2  00E7               	movwf	sprintf@fmt
  1096  01A3  3088               	movlw	high (STR_1| (0+32768))
  1097  01A4  00E8               	movwf	sprintf@fmt+1
  1098  01A5  0021               	movlb	1	; select bank1
  1099  01A6  0863               	movf	main@c^(0+128),w
  1100  01A7  0020               	movlb	0	; select bank0
  1101  01A8  00ED               	movwf	??_main
  1102  01A9  01EE               	clrf	??_main+1
  1103  01AA  086D               	movf	??_main,w
  1104  01AB  00E9               	movwf	?_sprintf+2
  1105  01AC  086E               	movf	??_main+1,w
  1106  01AD  00EA               	movwf	?_sprintf+3
  1107  01AE  0021               	movlb	1	; select bank1
  1108  01AF  0862               	movf	(main@val+1)^(0+128),w
  1109  01B0  0020               	movlb	0	; select bank0
  1110  01B1  00EC               	movwf	?_sprintf+5
  1111  01B2  0021               	movlb	1	; select bank1
  1112  01B3  0861               	movf	main@val^(0+128),w
  1113  01B4  0020               	movlb	0	; select bank0
  1114  01B5  00EB               	movwf	?_sprintf+4
  1115  01B6  30D1               	movlw	(low (main@valStr| 0))& (0+255)
  1116  01B7  3180  20C8  3181   	fcall	_sprintf
  1117  01BA                     l1502:
  1118                           
  1119                           ;main.c: 45:         serial_print(valStr);
  1120  01BA  30D1               	movlw	(low (main@valStr| 0))& (0+255)
  1121  01BB  3180  20A9  3181   	fcall	_serial_print
  1122  01BE  298E               	goto	l1496
  1123  01BF  3180  2802         	ljmp	start
  1124  01C1                     __end_of_main:
  1125                           
  1126                           	psect	text1
  1127  00C8                     __ptext1:	
  1128 ;; *************** function _sprintf *****************
  1129 ;; Defined at:
  1130 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  s               1    wreg     PTR unsigned char 
  1133 ;;		 -> main@valStr(16), 
  1134 ;;  fmt             2   71[BANK0 ] PTR const unsigned char 
  1135 ;;		 -> STR_1(7), 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  s               1    3[BANK1 ] PTR unsigned char 
  1138 ;;		 -> main@valStr(16), 
  1139 ;;  f               5    4[BANK1 ] struct _IO_FILE
  1140 ;;  ret             2    0        int 
  1141 ;;  ap              1    2[BANK1 ] PTR void [1]
  1142 ;;		 -> ?_sprintf(2), 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  2   71[BANK0 ] int 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1152 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1153 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  1154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1155 ;;      Totals:         1       6       9       0       0       0       0       0       0       0       0       0       
      +0       0
  1156 ;;Total ram usage:       16 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    7
  1159 ;; This function calls:
  1160 ;;		_vfprintf
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           
  1167                           ;psect for function _sprintf
  1168  00C8                     _sprintf:
  1169                           
  1170                           ;incstack = 0
  1171                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1172                           ;sprintf@s stored from wreg
  1173  00C8  0021               	movlb	1	; select bank1
  1174  00C9  00CB               	movwf	sprintf@s^(0+128)
  1175  00CA                     l1470:
  1176  00CA  3069               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1177  00CB  00FD               	movwf	??_sprintf
  1178  00CC  087D               	movf	??_sprintf,w
  1179  00CD  00CA               	movwf	sprintf@ap^(0+128)
  1180  00CE  084B               	movf	sprintf@s^(0+128),w
  1181  00CF  00FD               	movwf	??_sprintf
  1182  00D0  087D               	movf	??_sprintf,w
  1183  00D1  00CC               	movwf	sprintf@f^(0+128)
  1184  00D2                     l1472:
  1185  00D2  01CD               	clrf	(sprintf@f^(0+128)+1)
  1186  00D3  01CE               	clrf	((sprintf@f+1)^(0+128)+1)
  1187  00D4                     l1474:
  1188  00D4  01CF               	clrf	(sprintf@f^(0+128)+3)
  1189  00D5  01D0               	clrf	((sprintf@f+1)^(0+128)+3)
  1190  00D6                     l1476:
  1191  00D6  0020               	movlb	0	; select bank0
  1192  00D7  0868               	movf	sprintf@fmt+1,w
  1193  00D8  00E0               	movwf	vfprintf@fmt+1
  1194  00D9  0867               	movf	sprintf@fmt,w
  1195  00DA  00DF               	movwf	vfprintf@fmt
  1196  00DB  30CA               	movlw	(low (sprintf@ap| 0))& (0+255)
  1197  00DC  00FD               	movwf	??_sprintf
  1198  00DD  087D               	movf	??_sprintf,w
  1199  00DE  00E1               	movwf	vfprintf@ap
  1200  00DF  30CC               	movlw	(low (sprintf@f| 0))& (0+255)
  1201  00E0  3181  2114  3180   	fcall	_vfprintf
  1202  00E3                     l1478:
  1203  00E3  0021               	movlb	1	; select bank1
  1204  00E4  084D               	movf	(sprintf@f^(0+128)+1),w
  1205  00E5  074B               	addwf	sprintf@s^(0+128),w
  1206  00E6  00FD               	movwf	??_sprintf
  1207  00E7  087D               	movf	??_sprintf,w
  1208  00E8  0086               	movwf	6
  1209  00E9  0187               	clrf	7
  1210  00EA  0181               	clrf	1
  1211  00EB                     l625:
  1212  00EB  0008               	return
  1213  00EC                     __end_of_sprintf:
  1214                           
  1215                           	psect	text2
  1216  0114                     __ptext2:	
  1217 ;; *************** function _vfprintf *****************
  1218 ;; Defined at:
  1219 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  fp              1    wreg     PTR struct _IO_FILE
  1222 ;;		 -> sprintf@f(5), 
  1223 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  1224 ;;		 -> STR_1(7), 
  1225 ;;  ap              1   65[BANK0 ] PTR PTR void 
  1226 ;;		 -> sprintf@ap(1), 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  fp              1   68[BANK0 ] PTR struct _IO_FILE
  1229 ;;		 -> sprintf@f(5), 
  1230 ;;  cfmt            2   69[BANK0 ] PTR unsigned char 
  1231 ;;		 -> STR_1(7), 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  2   63[BANK0 ] int 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1241 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1242 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1243 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1244 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1245 ;;Total ram usage:        8 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    6
  1248 ;; This function calls:
  1249 ;;		_vfpfcnvrt
  1250 ;; This function is called by:
  1251 ;;		_sprintf
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _vfprintf
  1257  0114                     _vfprintf:
  1258                           
  1259                           ;incstack = 0
  1260                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1261                           ;vfprintf@fp stored from wreg
  1262  0114  0020               	movlb	0	; select bank0
  1263  0115  00E4               	movwf	vfprintf@fp
  1264  0116                     l1424:
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1267  0116  0860               	movf	vfprintf@fmt+1,w
  1268  0117  00E6               	movwf	vfprintf@cfmt+1
  1269  0118  085F               	movf	vfprintf@fmt,w
  1270  0119  00E5               	movwf	vfprintf@cfmt
  1271  011A                     l1426:
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1274  011A  0021               	movlb	1	; select bank1
  1275  011B  01A0               	clrf	_nout^(0+128)
  1276  011C  01A1               	clrf	(_nout+1)^(0+128)
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1279  011D  2932               	goto	l1430
  1280  011E                     l1428:
  1281                           
  1282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1283  011E  3065               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1284  011F  00E2               	movwf	??_vfprintf
  1285  0120  0862               	movf	??_vfprintf,w
  1286  0121  00CE               	movwf	vfpfcnvrt@fmt
  1287  0122  0861               	movf	vfprintf@ap,w
  1288  0123  00E3               	movwf	??_vfprintf+1
  1289  0124  0863               	movf	??_vfprintf+1,w
  1290  0125  00CF               	movwf	vfpfcnvrt@ap
  1291  0126  0864               	movf	vfprintf@fp,w
  1292  0127  3185  2579  3181   	fcall	_vfpfcnvrt
  1293  012A  0020               	movlb	0	; select bank0
  1294  012B  084E               	movf	?_vfpfcnvrt,w
  1295  012C  0021               	movlb	1	; select bank1
  1296  012D  07A0               	addwf	_nout^(0+128),f
  1297  012E  0020               	movlb	0	; select bank0
  1298  012F  084F               	movf	?_vfpfcnvrt+1,w
  1299  0130  0021               	movlb	1	; select bank1
  1300  0131  3DA1               	addwfc	(_nout+1)^(0+128),f
  1301  0132                     l1430:
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1304  0132  0020               	movlb	0	; select bank0
  1305  0133  0865               	movf	vfprintf@cfmt,w
  1306  0134  0084               	movwf	4
  1307  0135  0866               	movf	vfprintf@cfmt+1,w
  1308  0136  0085               	movwf	5
  1309  0137  0012               	moviw fsr0++
  1310  0138  1D03               	btfss	3,2
  1311  0139  293B               	goto	u1391
  1312  013A  293C               	goto	u1390
  1313  013B                     u1391:
  1314  013B  291E               	goto	l1428
  1315  013C                     u1390:
  1316  013C                     l1432:
  1317                           
  1318                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1319  013C  0021               	movlb	1	; select bank1
  1320  013D  0821               	movf	(_nout+1)^(0+128),w
  1321  013E  0020               	movlb	0	; select bank0
  1322  013F  00E0               	movwf	?_vfprintf+1
  1323  0140  0021               	movlb	1	; select bank1
  1324  0141  0820               	movf	_nout^(0+128),w
  1325  0142  0020               	movlb	0	; select bank0
  1326  0143  00DF               	movwf	?_vfprintf
  1327  0144                     l714:
  1328  0144  0008               	return
  1329  0145                     __end_of_vfprintf:
  1330                           
  1331                           	psect	text3
  1332  0579                     __ptext3:	
  1333 ;; *************** function _vfpfcnvrt *****************
  1334 ;; Defined at:
  1335 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  fp              1    wreg     PTR struct _IO_FILE
  1338 ;;		 -> sprintf@f(5), 
  1339 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1340 ;;		 -> vfprintf@cfmt(2), 
  1341 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1342 ;;		 -> sprintf@ap(1), 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  fp              1   62[BANK0 ] PTR struct _IO_FILE
  1345 ;;		 -> sprintf@f(5), 
  1346 ;;  ll              8   53[BANK0 ] long long 
  1347 ;;  llu             8    0        unsigned long long 
  1348 ;;  f               4    0        unsigned long long 
  1349 ;;  ct              3    0        unsigned char [3]
  1350 ;;  vp              2    0        PTR void 
  1351 ;;  i               2    0        int 
  1352 ;;  done            2    0        int 
  1353 ;;  cp              2    0        PTR unsigned char 
  1354 ;;  c               1   61[BANK0 ] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  2   46[BANK0 ] int 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1364 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1365 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1366 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1367 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1368 ;;Total ram usage:       17 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    5
  1371 ;; This function calls:
  1372 ;;		_ctoa
  1373 ;;		_dtoa
  1374 ;;		_fputc
  1375 ;; This function is called by:
  1376 ;;		_vfprintf
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _vfpfcnvrt
  1382  0579                     _vfpfcnvrt:
  1383                           
  1384                           ;incstack = 0
  1385                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1386                           ;vfpfcnvrt@fp stored from wreg
  1387  0579  0020               	movlb	0	; select bank0
  1388  057A  00DE               	movwf	vfpfcnvrt@fp
  1389  057B                     l1342:
  1390                           
  1391                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1392  057B  084E               	movf	vfpfcnvrt@fmt,w
  1393  057C  0086               	movwf	6
  1394  057D  0187               	clrf	7
  1395  057E  3F40               	moviw [0]fsr1
  1396  057F  00D0               	movwf	??_vfpfcnvrt
  1397  0580  3F41               	moviw [1]fsr1
  1398  0581  00D1               	movwf	??_vfpfcnvrt+1
  1399  0582  0850               	movf	??_vfpfcnvrt,w
  1400  0583  0084               	movwf	4
  1401  0584  0851               	movf	??_vfpfcnvrt+1,w
  1402  0585  0085               	movwf	5
  1403  0586  0012               	moviw fsr0++
  1404  0587  3A25               	xorlw	37
  1405  0588  1D03               	btfss	3,2
  1406  0589  2D8B               	goto	u1261
  1407  058A  2D8C               	goto	u1260
  1408  058B                     u1261:
  1409  058B  2E63               	goto	l1388
  1410  058C                     u1260:
  1411  058C                     l1344:
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1414  058C  084E               	movf	vfpfcnvrt@fmt,w
  1415  058D  0086               	movwf	6
  1416  058E  0187               	clrf	7
  1417  058F  3001               	movlw	1
  1418  0590  0781               	addwf	1,f
  1419  0591  3141               	addfsr 1,1
  1420  0592  1803               	skipnc
  1421  0593  0A81               	incf	1,f
  1422  0594                     l1346:
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1425  0594  0021               	movlb	1	; select bank1
  1426  0595  01A2               	clrf	_width^(0+128)
  1427  0596  01A3               	clrf	(_width+1)^(0+128)
  1428  0597  01A6               	clrf	_flags^(0+128)
  1429  0598  01A7               	clrf	(_flags+1)^(0+128)
  1430  0599                     l1348:
  1431                           
  1432                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1433  0599  30FF               	movlw	255
  1434  059A  00A4               	movwf	_prec^(0+128)
  1435  059B  30FF               	movlw	255
  1436  059C  00A5               	movwf	(_prec^(0+128)+1)
  1437  059D                     l1350:
  1438                           
  1439                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  1440  059D  0020               	movlb	0	; select bank0
  1441  059E  084E               	movf	vfpfcnvrt@fmt,w
  1442  059F  0086               	movwf	6
  1443  05A0  0187               	clrf	7
  1444  05A1  3F40               	moviw [0]fsr1
  1445  05A2  00D0               	movwf	??_vfpfcnvrt
  1446  05A3  3F41               	moviw [1]fsr1
  1447  05A4  00D1               	movwf	??_vfpfcnvrt+1
  1448  05A5  0850               	movf	??_vfpfcnvrt,w
  1449  05A6  0084               	movwf	4
  1450  05A7  0851               	movf	??_vfpfcnvrt+1,w
  1451  05A8  0085               	movwf	5
  1452  05A9  0012               	moviw fsr0++
  1453  05AA  3A63               	xorlw	99
  1454  05AB  1D03               	btfss	3,2
  1455  05AC  2DAE               	goto	u1271
  1456  05AD  2DAF               	goto	u1270
  1457  05AE                     u1271:
  1458  05AE  2DD1               	goto	l1360
  1459  05AF                     u1270:
  1460  05AF                     l1352:
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  1463  05AF  084E               	movf	vfpfcnvrt@fmt,w
  1464  05B0  0086               	movwf	6
  1465  05B1  0187               	clrf	7
  1466  05B2  3001               	movlw	1
  1467  05B3  0781               	addwf	1,f
  1468  05B4  3141               	addfsr 1,1
  1469  05B5  1803               	skipnc
  1470  05B6  0A81               	incf	1,f
  1471  05B7                     l1354:
  1472                           
  1473                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1474  05B7  084F               	movf	vfpfcnvrt@ap,w
  1475  05B8  0086               	movwf	6
  1476  05B9  0187               	clrf	7
  1477  05BA  0801               	movf	1,w
  1478  05BB  0084               	movwf	4
  1479  05BC  0185               	clrf	5
  1480  05BD  3002               	movlw	2
  1481  05BE  0781               	addwf	1,f
  1482  05BF  0800               	movf	0,w
  1483  05C0  00D0               	movwf	??_vfpfcnvrt
  1484  05C1  0850               	movf	??_vfpfcnvrt,w
  1485  05C2  00DD               	movwf	vfpfcnvrt@c
  1486  05C3                     l1356:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  1489  05C3  085D               	movf	vfpfcnvrt@c,w
  1490  05C4  00D0               	movwf	??_vfpfcnvrt
  1491  05C5  0850               	movf	??_vfpfcnvrt,w
  1492  05C6  00F8               	movwf	ctoa@c
  1493  05C7  085E               	movf	vfpfcnvrt@fp,w
  1494  05C8  3183  231A  3185   	fcall	_ctoa
  1495  05CB  0879               	movf	?_ctoa+1,w
  1496  05CC  0020               	movlb	0	; select bank0
  1497  05CD  00CF               	movwf	?_vfpfcnvrt+1
  1498  05CE  0878               	movf	?_ctoa,w
  1499  05CF  00CE               	movwf	?_vfpfcnvrt
  1500  05D0  2E86               	goto	l704
  1501  05D1                     l1360:
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1504  05D1  084E               	movf	vfpfcnvrt@fmt,w
  1505  05D2  0086               	movwf	6
  1506  05D3  0187               	clrf	7
  1507  05D4  3F40               	moviw [0]fsr1
  1508  05D5  00D0               	movwf	??_vfpfcnvrt
  1509  05D6  3F41               	moviw [1]fsr1
  1510  05D7  00D1               	movwf	??_vfpfcnvrt+1
  1511  05D8  0850               	movf	??_vfpfcnvrt,w
  1512  05D9  0084               	movwf	4
  1513  05DA  0851               	movf	??_vfpfcnvrt+1,w
  1514  05DB  0085               	movwf	5
  1515  05DC  0012               	moviw fsr0++
  1516  05DD  3A64               	xorlw	100
  1517  05DE  1903               	btfsc	3,2
  1518  05DF  2DE1               	goto	u1281
  1519  05E0  2DE2               	goto	u1280
  1520  05E1                     u1281:
  1521  05E1  2DF3               	goto	l1364
  1522  05E2                     u1280:
  1523  05E2                     l1362:
  1524  05E2  084E               	movf	vfpfcnvrt@fmt,w
  1525  05E3  0086               	movwf	6
  1526  05E4  0187               	clrf	7
  1527  05E5  3F40               	moviw [0]fsr1
  1528  05E6  00D0               	movwf	??_vfpfcnvrt
  1529  05E7  3F41               	moviw [1]fsr1
  1530  05E8  00D1               	movwf	??_vfpfcnvrt+1
  1531  05E9  0850               	movf	??_vfpfcnvrt,w
  1532  05EA  0084               	movwf	4
  1533  05EB  0851               	movf	??_vfpfcnvrt+1,w
  1534  05EC  0085               	movwf	5
  1535  05ED  0012               	moviw fsr0++
  1536  05EE  3A69               	xorlw	105
  1537  05EF  1D03               	btfss	3,2
  1538  05F0  2DF2               	goto	u1291
  1539  05F1  2DF3               	goto	u1290
  1540  05F2                     u1291:
  1541  05F2  2E2E               	goto	l1372
  1542  05F3                     u1290:
  1543  05F3                     l1364:
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1546  05F3  084E               	movf	vfpfcnvrt@fmt,w
  1547  05F4  0086               	movwf	6
  1548  05F5  0187               	clrf	7
  1549  05F6  3001               	movlw	1
  1550  05F7  0781               	addwf	1,f
  1551  05F8  3141               	addfsr 1,1
  1552  05F9  1803               	skipnc
  1553  05FA  0A81               	incf	1,f
  1554  05FB                     l1366:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1557  05FB  084F               	movf	vfpfcnvrt@ap,w
  1558  05FC  0086               	movwf	6
  1559  05FD  0187               	clrf	7
  1560  05FE  0801               	movf	1,w
  1561  05FF  0084               	movwf	4
  1562  0600  0185               	clrf	5
  1563  0601  3002               	movlw	2
  1564  0602  0781               	addwf	1,f
  1565  0603  3F00               	moviw [0]fsr0
  1566  0604  00D0               	movwf	??_vfpfcnvrt
  1567  0605  3F01               	moviw [1]fsr0
  1568  0606  00D1               	movwf	??_vfpfcnvrt+1
  1569  0607  0850               	movf	??_vfpfcnvrt,w
  1570  0608  00D5               	movwf	vfpfcnvrt@ll
  1571  0609  0851               	movf	??_vfpfcnvrt+1,w
  1572  060A  00D6               	movwf	vfpfcnvrt@ll+1
  1573  060B  0D89               	rlf	9,f
  1574  060C  3B89               	subwfb	9,f
  1575  060D  0989               	comf	9,f
  1576  060E  00D7               	movwf	vfpfcnvrt@ll+2
  1577  060F  00D8               	movwf	vfpfcnvrt@ll+3
  1578  0610  00D9               	movwf	vfpfcnvrt@ll+4
  1579  0611  00DA               	movwf	vfpfcnvrt@ll+5
  1580  0612  00DB               	movwf	vfpfcnvrt@ll+6
  1581  0613  00DC               	movwf	vfpfcnvrt@ll+7
  1582  0614                     l1368:
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1585  0614  0855               	movf	vfpfcnvrt@ll,w
  1586  0615  00B0               	movwf	dtoa@d
  1587  0616  0856               	movf	vfpfcnvrt@ll+1,w
  1588  0617  00B1               	movwf	dtoa@d+1
  1589  0618  0857               	movf	vfpfcnvrt@ll+2,w
  1590  0619  00B2               	movwf	dtoa@d+2
  1591  061A  0858               	movf	vfpfcnvrt@ll+3,w
  1592  061B  00B3               	movwf	dtoa@d+3
  1593  061C  0859               	movf	vfpfcnvrt@ll+4,w
  1594  061D  00B4               	movwf	dtoa@d+4
  1595  061E  085A               	movf	vfpfcnvrt@ll+5,w
  1596  061F  00B5               	movwf	dtoa@d+5
  1597  0620  085B               	movf	vfpfcnvrt@ll+6,w
  1598  0621  00B6               	movwf	dtoa@d+6
  1599  0622  085C               	movf	vfpfcnvrt@ll+7,w
  1600  0623  00B7               	movwf	dtoa@d+7
  1601  0624  085E               	movf	vfpfcnvrt@fp,w
  1602  0625  3186  2687  3185   	fcall	_dtoa
  1603  0628  0020               	movlb	0	; select bank0
  1604  0629  0831               	movf	?_dtoa+1,w
  1605  062A  00CF               	movwf	?_vfpfcnvrt+1
  1606  062B  0830               	movf	?_dtoa,w
  1607  062C  00CE               	movwf	?_vfpfcnvrt
  1608  062D  2E86               	goto	l704
  1609  062E                     l1372:
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1612  062E  084E               	movf	vfpfcnvrt@fmt,w
  1613  062F  0086               	movwf	6
  1614  0630  0187               	clrf	7
  1615  0631  3F40               	moviw [0]fsr1
  1616  0632  00D0               	movwf	??_vfpfcnvrt
  1617  0633  3F41               	moviw [1]fsr1
  1618  0634  00D1               	movwf	??_vfpfcnvrt+1
  1619  0635  0850               	movf	??_vfpfcnvrt,w
  1620  0636  0084               	movwf	4
  1621  0637  0851               	movf	??_vfpfcnvrt+1,w
  1622  0638  0085               	movwf	5
  1623  0639  0012               	moviw fsr0++
  1624  063A  3A25               	xorlw	37
  1625  063B  1D03               	btfss	3,2
  1626  063C  2E3E               	goto	u1301
  1627  063D  2E3F               	goto	u1300
  1628  063E                     u1301:
  1629  063E  2E58               	goto	l1382
  1630  063F                     u1300:
  1631  063F                     l1374:
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1634  063F  084E               	movf	vfpfcnvrt@fmt,w
  1635  0640  0086               	movwf	6
  1636  0641  0187               	clrf	7
  1637  0642  3001               	movlw	1
  1638  0643  0781               	addwf	1,f
  1639  0644  3141               	addfsr 1,1
  1640  0645  1803               	skipnc
  1641  0646  0A81               	incf	1,f
  1642  0647                     l1376:
  1643                           
  1644                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1645  0647  3025               	movlw	37
  1646  0648  00F0               	movwf	fputc@c
  1647  0649  3000               	movlw	0
  1648  064A  00F1               	movwf	fputc@c+1
  1649  064B  085E               	movf	vfpfcnvrt@fp,w
  1650  064C  00D0               	movwf	??_vfpfcnvrt
  1651  064D  0850               	movf	??_vfpfcnvrt,w
  1652  064E  00F2               	movwf	fputc@fp
  1653  064F  3181  21C1  3185   	fcall	_fputc
  1654  0652                     l1378:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1657  0652  3001               	movlw	1
  1658  0653  0020               	movlb	0	; select bank0
  1659  0654  00CE               	movwf	?_vfpfcnvrt
  1660  0655  3000               	movlw	0
  1661  0656  00CF               	movwf	?_vfpfcnvrt+1
  1662  0657  2E86               	goto	l704
  1663  0658                     l1382:
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1666  0658  084E               	movf	vfpfcnvrt@fmt,w
  1667  0659  0086               	movwf	6
  1668  065A  0187               	clrf	7
  1669  065B  3001               	movlw	1
  1670  065C  0781               	addwf	1,f
  1671  065D  3141               	addfsr 1,1
  1672  065E  1803               	skipnc
  1673  065F  0A81               	incf	1,f
  1674  0660                     l1384:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1677  0660  01CE               	clrf	?_vfpfcnvrt
  1678  0661  01CF               	clrf	?_vfpfcnvrt+1
  1679  0662  2E86               	goto	l704
  1680  0663                     l1388:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1683  0663  084E               	movf	vfpfcnvrt@fmt,w
  1684  0664  0086               	movwf	6
  1685  0665  0187               	clrf	7
  1686  0666  3F40               	moviw [0]fsr1
  1687  0667  00D0               	movwf	??_vfpfcnvrt
  1688  0668  3F41               	moviw [1]fsr1
  1689  0669  00D1               	movwf	??_vfpfcnvrt+1
  1690  066A  0850               	movf	??_vfpfcnvrt,w
  1691  066B  0084               	movwf	4
  1692  066C  0851               	movf	??_vfpfcnvrt+1,w
  1693  066D  0085               	movwf	5
  1694  066E  0800               	movf	0,w	;code access
  1695  066F  00D2               	movwf	??_vfpfcnvrt+2
  1696  0670  01D3               	clrf	??_vfpfcnvrt+3
  1697  0671  0852               	movf	??_vfpfcnvrt+2,w
  1698  0672  00F0               	movwf	fputc@c
  1699  0673  0853               	movf	??_vfpfcnvrt+3,w
  1700  0674  00F1               	movwf	fputc@c+1
  1701  0675  085E               	movf	vfpfcnvrt@fp,w
  1702  0676  00D4               	movwf	??_vfpfcnvrt+4
  1703  0677  0854               	movf	??_vfpfcnvrt+4,w
  1704  0678  00F2               	movwf	fputc@fp
  1705  0679  3181  21C1  3185   	fcall	_fputc
  1706  067C                     l1390:
  1707                           
  1708                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1709  067C  0020               	movlb	0	; select bank0
  1710  067D  084E               	movf	vfpfcnvrt@fmt,w
  1711  067E  0086               	movwf	6
  1712  067F  0187               	clrf	7
  1713  0680  3001               	movlw	1
  1714  0681  0781               	addwf	1,f
  1715  0682  3141               	addfsr 1,1
  1716  0683  1803               	skipnc
  1717  0684  0A81               	incf	1,f
  1718  0685  2E52               	goto	l1378
  1719  0686                     l704:
  1720  0686  0008               	return
  1721  0687                     __end_of_vfpfcnvrt:
  1722                           
  1723                           	psect	text4
  1724  0687                     __ptext4:	
  1725 ;; *************** function _dtoa *****************
  1726 ;; Defined at:
  1727 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  fp              1    wreg     PTR struct _IO_FILE
  1730 ;;		 -> sprintf@f(5), 
  1731 ;;  d               8   16[BANK0 ] long long 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  1734 ;;		 -> sprintf@f(5), 
  1735 ;;  n               8   36[BANK0 ] long long 
  1736 ;;  i               2   44[BANK0 ] int 
  1737 ;;  s               2   34[BANK0 ] int 
  1738 ;;  w               2   32[BANK0 ] int 
  1739 ;;  p               2   30[BANK0 ] int 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  2   16[BANK0 ] int 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1749 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1753 ;;Total ram usage:       30 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    4
  1756 ;; This function calls:
  1757 ;;		___aodiv
  1758 ;;		___aomod
  1759 ;;		_abs
  1760 ;;		_pad
  1761 ;; This function is called by:
  1762 ;;		_vfpfcnvrt
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _dtoa
  1768  0687                     _dtoa:
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1772                           ;dtoa@fp stored from wreg
  1773  0687  0020               	movlb	0	; select bank0
  1774  0688  00BD               	movwf	dtoa@fp
  1775  0689                     l1284:
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1778  0689  0830               	movf	dtoa@d,w
  1779  068A  00C4               	movwf	dtoa@n
  1780  068B  0831               	movf	dtoa@d+1,w
  1781  068C  00C5               	movwf	dtoa@n+1
  1782  068D  0832               	movf	dtoa@d+2,w
  1783  068E  00C6               	movwf	dtoa@n+2
  1784  068F  0833               	movf	dtoa@d+3,w
  1785  0690  00C7               	movwf	dtoa@n+3
  1786  0691  0834               	movf	dtoa@d+4,w
  1787  0692  00C8               	movwf	dtoa@n+4
  1788  0693  0835               	movf	dtoa@d+5,w
  1789  0694  00C9               	movwf	dtoa@n+5
  1790  0695  0836               	movf	dtoa@d+6,w
  1791  0696  00CA               	movwf	dtoa@n+6
  1792  0697  0837               	movf	dtoa@d+7,w
  1793  0698  00CB               	movwf	dtoa@n+7
  1794  0699                     l1286:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1797  0699  3044               	movlw	low dtoa@n
  1798  069A  0086               	movwf	6
  1799  069B  3000               	movlw	high dtoa@n
  1800  069C  0087               	movwf	7
  1801  069D  3F47               	moviw [7]fsr1
  1802  069E  00B8               	movwf	??_dtoa
  1803  069F  1BB8               	btfsc	??_dtoa,7
  1804  06A0  2EA2               	goto	u1101
  1805  06A1  2EA4               	goto	u1100
  1806  06A2                     u1101:
  1807  06A2  3001               	movlw	1
  1808  06A3  2EA5               	goto	u1110
  1809  06A4                     u1100:
  1810  06A4  3000               	movlw	0
  1811  06A5                     u1110:
  1812  06A5  0020               	movlb	0	; select bank0
  1813  06A6  00B9               	movwf	??_dtoa+1
  1814  06A7  01BA               	clrf	??_dtoa+2
  1815  06A8  0839               	movf	??_dtoa+1,w
  1816  06A9  00C2               	movwf	dtoa@s
  1817  06AA  083A               	movf	??_dtoa+2,w
  1818  06AB  00C3               	movwf	dtoa@s+1
  1819  06AC                     l1288:
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1822  06AC  0842               	movf	dtoa@s,w
  1823  06AD  0443               	iorwf	dtoa@s+1,w
  1824  06AE  1903               	btfsc	3,2
  1825  06AF  2EB1               	goto	u1121
  1826  06B0  2EB2               	goto	u1120
  1827  06B1                     u1121:
  1828  06B1  2ED0               	goto	l676
  1829  06B2                     u1120:
  1830  06B2                     l1290:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1833  06B2  09C4               	comf	dtoa@n,f
  1834  06B3  09C5               	comf	dtoa@n+1,f
  1835  06B4  09C6               	comf	dtoa@n+2,f
  1836  06B5  09C7               	comf	dtoa@n+3,f
  1837  06B6  09C8               	comf	dtoa@n+4,f
  1838  06B7  09C9               	comf	dtoa@n+5,f
  1839  06B8  09CA               	comf	dtoa@n+6,f
  1840  06B9  09CB               	comf	dtoa@n+7,f
  1841  06BA  0AC4               	incf	dtoa@n,f
  1842  06BB  1D03               	skipz
  1843  06BC  2ED0               	goto	u113lld
  1844  06BD  0AC5               	incf	dtoa@n+1,f
  1845  06BE  1D03               	skipz
  1846  06BF  2ED0               	goto	u113lld
  1847  06C0  0AC6               	incf	dtoa@n+2,f
  1848  06C1  1D03               	skipz
  1849  06C2  2ED0               	goto	u113lld
  1850  06C3  0AC7               	incf	dtoa@n+3,f
  1851  06C4  1D03               	skipz
  1852  06C5  2ED0               	goto	u113lld
  1853  06C6  0AC8               	incf	dtoa@n+4,f
  1854  06C7  1D03               	skipz
  1855  06C8  2ED0               	goto	u113lld
  1856  06C9  0AC9               	incf	dtoa@n+5,f
  1857  06CA  1D03               	skipz
  1858  06CB  2ED0               	goto	u113lld
  1859  06CC  0ACA               	incf	dtoa@n+6,f
  1860  06CD  1D03               	skipz
  1861  06CE  2ED0               	goto	u113lld
  1862  06CF  0ACB               	incf	dtoa@n+7,f
  1863  06D0                     u113lld:
  1864  06D0                     l676:	
  1865                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 297:     }
  1866                           
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1869  06D0  0021               	movlb	1	; select bank1
  1870  06D1  1BA5               	btfsc	(_prec+1)^(0+128),7
  1871  06D2  2ED4               	goto	u1141
  1872  06D3  2ED5               	goto	u1140
  1873  06D4                     u1141:
  1874  06D4  2ED9               	goto	l677
  1875  06D5                     u1140:
  1876  06D5                     l1292:
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1879  06D5  30FD               	movlw	253
  1880  06D6  05A6               	andwf	_flags^(0+128),f
  1881  06D7  30FF               	movlw	255
  1882  06D8  05A7               	andwf	(_flags+1)^(0+128),f
  1883  06D9                     l677:	
  1884                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 302:     }
  1885                           
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1888  06D9  0825               	movf	(_prec+1)^(0+128),w
  1889  06DA  3A80               	xorlw	128
  1890  06DB  0020               	movlb	0	; select bank0
  1891  06DC  00B8               	movwf	??_dtoa
  1892  06DD  3080               	movlw	128
  1893  06DE  0238               	subwf	??_dtoa,w
  1894  06DF  1D03               	skipz
  1895  06E0  2EE4               	goto	u1155
  1896  06E1  3001               	movlw	1
  1897  06E2  0021               	movlb	1	; select bank1
  1898  06E3  0224               	subwf	_prec^(0+128),w
  1899  06E4                     u1155:
  1900  06E4  1803               	skipnc
  1901  06E5  2EE7               	goto	u1151
  1902  06E6  2EE8               	goto	u1150
  1903  06E7                     u1151:
  1904  06E7  2EEE               	goto	l1296
  1905  06E8                     u1150:
  1906  06E8                     l1294:
  1907  06E8  3001               	movlw	1
  1908  06E9  0020               	movlb	0	; select bank0
  1909  06EA  00BE               	movwf	dtoa@p
  1910  06EB  3000               	movlw	0
  1911  06EC  00BF               	movwf	dtoa@p+1
  1912  06ED  2EF6               	goto	l681
  1913  06EE                     l1296:
  1914  06EE  0021               	movlb	1	; select bank1
  1915  06EF  0825               	movf	(_prec+1)^(0+128),w
  1916  06F0  0020               	movlb	0	; select bank0
  1917  06F1  00BF               	movwf	dtoa@p+1
  1918  06F2  0021               	movlb	1	; select bank1
  1919  06F3  0824               	movf	_prec^(0+128),w
  1920  06F4  0020               	movlb	0	; select bank0
  1921  06F5  00BE               	movwf	dtoa@p
  1922  06F6                     l681:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1925  06F6  0021               	movlb	1	; select bank1
  1926  06F7  0823               	movf	(_width+1)^(0+128),w
  1927  06F8  0020               	movlb	0	; select bank0
  1928  06F9  00C1               	movwf	dtoa@w+1
  1929  06FA  0021               	movlb	1	; select bank1
  1930  06FB  0822               	movf	_width^(0+128),w
  1931  06FC  0020               	movlb	0	; select bank0
  1932  06FD  00C0               	movwf	dtoa@w
  1933  06FE                     l1298:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1936  06FE  0842               	movf	dtoa@s,w
  1937  06FF  0443               	iorwf	dtoa@s+1,w
  1938  0700  1D03               	btfss	3,2
  1939  0701  2F03               	goto	u1161
  1940  0702  2F04               	goto	u1160
  1941  0703                     u1161:
  1942  0703  2F09               	goto	l1302
  1943  0704                     u1160:
  1944  0704                     l1300:
  1945  0704  0021               	movlb	1	; select bank1
  1946  0705  1D26               	btfss	_flags^(0+128),2
  1947  0706  2F08               	goto	u1171
  1948  0707  2F09               	goto	u1170
  1949  0708                     u1171:
  1950  0708  2F0E               	goto	l682
  1951  0709                     u1170:
  1952  0709                     l1302:
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  1955  0709  30FF               	movlw	255
  1956  070A  0020               	movlb	0	; select bank0
  1957  070B  07C0               	addwf	dtoa@w,f
  1958  070C  30FF               	movlw	255
  1959  070D  3DC1               	addwfc	dtoa@w+1,f
  1960  070E                     l682:	
  1961                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 307:     }
  1962                           
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1965  070E  301F               	movlw	31
  1966  070F  0020               	movlb	0	; select bank0
  1967  0710  00CC               	movwf	dtoa@i
  1968  0711  3000               	movlw	0
  1969  0712  00CD               	movwf	dtoa@i+1
  1970  0713                     l1304:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1973  0713  0021               	movlb	1	; select bank1
  1974  0714  01C7               	clrf	(_dbuf^(0+128)+31)
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1977  0715  2F7E               	goto	l685
  1978  0716                     l1306:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  1981  0716  30FF               	movlw	255
  1982  0717  0020               	movlb	0	; select bank0
  1983  0718  07CC               	addwf	dtoa@i,f
  1984  0719  30FF               	movlw	255
  1985  071A  3DCD               	addwfc	dtoa@i+1,f
  1986  071B                     l1308:
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1989  071B  300A               	movlw	10
  1990  071C  00A0               	movwf	___aomod@divisor
  1991  071D  01A1               	clrf	___aomod@divisor+1
  1992  071E  01A2               	clrf	___aomod@divisor+2
  1993  071F  01A3               	clrf	___aomod@divisor+3
  1994  0720  01A4               	clrf	___aomod@divisor+4
  1995  0721  01A5               	clrf	___aomod@divisor+5
  1996  0722  01A6               	clrf	___aomod@divisor+6
  1997  0723  01A7               	clrf	___aomod@divisor+7
  1998  0724  0844               	movf	dtoa@n,w
  1999  0725  00A8               	movwf	___aomod@dividend
  2000  0726  0845               	movf	dtoa@n+1,w
  2001  0727  00A9               	movwf	___aomod@dividend+1
  2002  0728  0846               	movf	dtoa@n+2,w
  2003  0729  00AA               	movwf	___aomod@dividend+2
  2004  072A  0847               	movf	dtoa@n+3,w
  2005  072B  00AB               	movwf	___aomod@dividend+3
  2006  072C  0848               	movf	dtoa@n+4,w
  2007  072D  00AC               	movwf	___aomod@dividend+4
  2008  072E  0849               	movf	dtoa@n+5,w
  2009  072F  00AD               	movwf	___aomod@dividend+5
  2010  0730  084A               	movf	dtoa@n+6,w
  2011  0731  00AE               	movwf	___aomod@dividend+6
  2012  0732  084B               	movf	dtoa@n+7,w
  2013  0733  00AF               	movwf	___aomod@dividend+7
  2014  0734  3183  238E  3186   	fcall	___aomod
  2015  0737  0020               	movlb	0	; select bank0
  2016  0738  0821               	movf	?___aomod+1,w
  2017  0739  00F4               	movwf	abs@a+1
  2018  073A  0820               	movf	?___aomod,w
  2019  073B  00F3               	movwf	abs@a
  2020  073C  3180  208F  3186   	fcall	_abs
  2021  073F  0873               	movf	?_abs,w
  2022  0740  3E30               	addlw	48
  2023  0741  0020               	movlb	0	; select bank0
  2024  0742  00B8               	movwf	??_dtoa
  2025  0743  084C               	movf	dtoa@i,w
  2026  0744  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2027  0745  0086               	movwf	6
  2028  0746  0187               	clrf	7
  2029  0747  0838               	movf	??_dtoa,w
  2030  0748  0081               	movwf	1
  2031  0749                     l1310:
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2034  0749  30FF               	movlw	255
  2035  074A  07BE               	addwf	dtoa@p,f
  2036  074B  30FF               	movlw	255
  2037  074C  3DBF               	addwfc	dtoa@p+1,f
  2038  074D                     l1312:
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2041  074D  30FF               	movlw	255
  2042  074E  07C0               	addwf	dtoa@w,f
  2043  074F  30FF               	movlw	255
  2044  0750  3DC1               	addwfc	dtoa@w+1,f
  2045  0751                     l1314:
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2048  0751  300A               	movlw	10
  2049  0752  00A0               	movwf	___aodiv@divisor
  2050  0753  01A1               	clrf	___aodiv@divisor+1
  2051  0754  01A2               	clrf	___aodiv@divisor+2
  2052  0755  01A3               	clrf	___aodiv@divisor+3
  2053  0756  01A4               	clrf	___aodiv@divisor+4
  2054  0757  01A5               	clrf	___aodiv@divisor+5
  2055  0758  01A6               	clrf	___aodiv@divisor+6
  2056  0759  01A7               	clrf	___aodiv@divisor+7
  2057  075A  0844               	movf	dtoa@n,w
  2058  075B  00A8               	movwf	___aodiv@dividend
  2059  075C  0845               	movf	dtoa@n+1,w
  2060  075D  00A9               	movwf	___aodiv@dividend+1
  2061  075E  0846               	movf	dtoa@n+2,w
  2062  075F  00AA               	movwf	___aodiv@dividend+2
  2063  0760  0847               	movf	dtoa@n+3,w
  2064  0761  00AB               	movwf	___aodiv@dividend+3
  2065  0762  0848               	movf	dtoa@n+4,w
  2066  0763  00AC               	movwf	___aodiv@dividend+4
  2067  0764  0849               	movf	dtoa@n+5,w
  2068  0765  00AD               	movwf	___aodiv@dividend+5
  2069  0766  084A               	movf	dtoa@n+6,w
  2070  0767  00AE               	movwf	___aodiv@dividend+6
  2071  0768  084B               	movf	dtoa@n+7,w
  2072  0769  00AF               	movwf	___aodiv@dividend+7
  2073  076A  3184  2478  3186   	fcall	___aodiv
  2074  076D  0020               	movlb	0	; select bank0
  2075  076E  0820               	movf	?___aodiv,w
  2076  076F  00C4               	movwf	dtoa@n
  2077  0770  0821               	movf	?___aodiv+1,w
  2078  0771  00C5               	movwf	dtoa@n+1
  2079  0772  0822               	movf	?___aodiv+2,w
  2080  0773  00C6               	movwf	dtoa@n+2
  2081  0774  0823               	movf	?___aodiv+3,w
  2082  0775  00C7               	movwf	dtoa@n+3
  2083  0776  0824               	movf	?___aodiv+4,w
  2084  0777  00C8               	movwf	dtoa@n+4
  2085  0778  0825               	movf	?___aodiv+5,w
  2086  0779  00C9               	movwf	dtoa@n+5
  2087  077A  0826               	movf	?___aodiv+6,w
  2088  077B  00CA               	movwf	dtoa@n+6
  2089  077C  0827               	movf	?___aodiv+7,w
  2090  077D  00CB               	movwf	dtoa@n+7
  2091  077E                     l685:	
  2092                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 318:     }
  2093                           
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2096  077E  0020               	movlb	0	; select bank0
  2097  077F  084D               	movf	dtoa@i+1,w
  2098  0780  3A80               	xorlw	128
  2099  0781  00B8               	movwf	??_dtoa
  2100  0782  3080               	movlw	128
  2101  0783  0238               	subwf	??_dtoa,w
  2102  0784  1D03               	skipz
  2103  0785  2F88               	goto	u1185
  2104  0786  3001               	movlw	1
  2105  0787  024C               	subwf	dtoa@i,w
  2106  0788                     u1185:
  2107  0788  1C03               	skipc
  2108  0789  2F8B               	goto	u1181
  2109  078A  2F8C               	goto	u1180
  2110  078B                     u1181:
  2111  078B  2FB9               	goto	l1324
  2112  078C                     u1180:
  2113  078C                     l1316:
  2114  078C  0020               	movlb	0	; select bank0
  2115  078D  0844               	movf	dtoa@n,w
  2116  078E  0445               	iorwf	dtoa@n+1,w
  2117  078F  0446               	iorwf	dtoa@n+2,w
  2118  0790  0447               	iorwf	dtoa@n+3,w
  2119  0791  0448               	iorwf	dtoa@n+4,w
  2120  0792  0449               	iorwf	dtoa@n+5,w
  2121  0793  044A               	iorwf	dtoa@n+6,w
  2122  0794  044B               	iorwf	dtoa@n+7,w
  2123  0795  1D03               	skipz
  2124  0796  2F98               	goto	u1191
  2125  0797  2F99               	goto	u1190
  2126  0798                     u1191:
  2127  0798  2F16               	goto	l1306
  2128  0799                     u1190:
  2129  0799                     l1318:
  2130  0799  083F               	movf	dtoa@p+1,w
  2131  079A  3A80               	xorlw	128
  2132  079B  00B8               	movwf	??_dtoa
  2133  079C  3080               	movlw	128
  2134  079D  0238               	subwf	??_dtoa,w
  2135  079E  1D03               	skipz
  2136  079F  2FA2               	goto	u1205
  2137  07A0  3001               	movlw	1
  2138  07A1  023E               	subwf	dtoa@p,w
  2139  07A2                     u1205:
  2140  07A2  1803               	skipnc
  2141  07A3  2FA5               	goto	u1201
  2142  07A4  2FA6               	goto	u1200
  2143  07A5                     u1201:
  2144  07A5  2F16               	goto	l1306
  2145  07A6                     u1200:
  2146  07A6                     l1320:
  2147  07A6  0020               	movlb	0	; select bank0
  2148  07A7  0841               	movf	dtoa@w+1,w
  2149  07A8  3A80               	xorlw	128
  2150  07A9  00B8               	movwf	??_dtoa
  2151  07AA  3080               	movlw	128
  2152  07AB  0238               	subwf	??_dtoa,w
  2153  07AC  1D03               	skipz
  2154  07AD  2FB0               	goto	u1215
  2155  07AE  3001               	movlw	1
  2156  07AF  0240               	subwf	dtoa@w,w
  2157  07B0                     u1215:
  2158  07B0  1C03               	skipc
  2159  07B1  2FB3               	goto	u1211
  2160  07B2  2FB4               	goto	u1210
  2161  07B3                     u1211:
  2162  07B3  2FB9               	goto	l1324
  2163  07B4                     u1210:
  2164  07B4                     l1322:
  2165  07B4  0021               	movlb	1	; select bank1
  2166  07B5  18A6               	btfsc	_flags^(0+128),1
  2167  07B6  2FB8               	goto	u1221
  2168  07B7  2FB9               	goto	u1220
  2169  07B8                     u1221:
  2170  07B8  2F16               	goto	l1306
  2171  07B9                     u1220:
  2172  07B9                     l1324:
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2175  07B9  0020               	movlb	0	; select bank0
  2176  07BA  0842               	movf	dtoa@s,w
  2177  07BB  0443               	iorwf	dtoa@s+1,w
  2178  07BC  1D03               	btfss	3,2
  2179  07BD  2FBF               	goto	u1231
  2180  07BE  2FC0               	goto	u1230
  2181  07BF                     u1231:
  2182  07BF  2FC5               	goto	l1328
  2183  07C0                     u1230:
  2184  07C0                     l1326:
  2185  07C0  0021               	movlb	1	; select bank1
  2186  07C1  1D26               	btfss	_flags^(0+128),2
  2187  07C2  2FC4               	goto	u1241
  2188  07C3  2FC5               	goto	u1240
  2189  07C4                     u1241:
  2190  07C4  2FE1               	goto	l1338
  2191  07C5                     u1240:
  2192  07C5                     l1328:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  2195  07C5  30FF               	movlw	255
  2196  07C6  0020               	movlb	0	; select bank0
  2197  07C7  07CC               	addwf	dtoa@i,f
  2198  07C8  30FF               	movlw	255
  2199  07C9  3DCD               	addwfc	dtoa@i+1,f
  2200  07CA                     l1330:
  2201                           
  2202                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2203  07CA  0842               	movf	dtoa@s,w
  2204  07CB  0443               	iorwf	dtoa@s+1,w
  2205  07CC  1D03               	btfss	3,2
  2206  07CD  2FCF               	goto	u1251
  2207  07CE  2FD0               	goto	u1250
  2208  07CF                     u1251:
  2209  07CF  2FD5               	goto	l1334
  2210  07D0                     u1250:
  2211  07D0                     l1332:
  2212  07D0  302B               	movlw	43
  2213  07D1  00BB               	movwf	_dtoa$492
  2214  07D2  3000               	movlw	0
  2215  07D3  00BC               	movwf	_dtoa$492+1
  2216  07D4  2FD9               	goto	l1336
  2217  07D5                     l1334:
  2218  07D5  302D               	movlw	45
  2219  07D6  00BB               	movwf	_dtoa$492
  2220  07D7  3000               	movlw	0
  2221  07D8  00BC               	movwf	_dtoa$492+1
  2222  07D9                     l1336:
  2223  07D9  083B               	movf	_dtoa$492,w
  2224  07DA  00B8               	movwf	??_dtoa
  2225  07DB  084C               	movf	dtoa@i,w
  2226  07DC  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2227  07DD  0086               	movwf	6
  2228  07DE  0187               	clrf	7
  2229  07DF  0838               	movf	??_dtoa,w
  2230  07E0  0081               	movwf	1
  2231  07E1                     l1338:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2234  07E1  0020               	movlb	0	; select bank0
  2235  07E2  084C               	movf	dtoa@i,w
  2236  07E3  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2237  07E4  00B8               	movwf	??_dtoa
  2238  07E5  0838               	movf	??_dtoa,w
  2239  07E6  00A4               	movwf	pad@buf
  2240  07E7  0841               	movf	dtoa@w+1,w
  2241  07E8  00A6               	movwf	pad@p+1
  2242  07E9  0840               	movf	dtoa@w,w
  2243  07EA  00A5               	movwf	pad@p
  2244  07EB  083D               	movf	dtoa@fp,w
  2245  07EC  3182  2267  3186   	fcall	_pad
  2246  07EF  0020               	movlb	0	; select bank0
  2247  07F0  0825               	movf	?_pad+1,w
  2248  07F1  00B1               	movwf	?_dtoa+1
  2249  07F2  0824               	movf	?_pad,w
  2250  07F3  00B0               	movwf	?_dtoa
  2251  07F4                     l699:
  2252  07F4  0008               	return
  2253  07F5                     __end_of_dtoa:
  2254                           
  2255                           	psect	text5
  2256  0267                     __ptext5:	
  2257 ;; *************** function _pad *****************
  2258 ;; Defined at:
  2259 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  fp              1    wreg     PTR struct _IO_FILE
  2262 ;;		 -> sprintf@f(5), 
  2263 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2264 ;;		 -> dbuf(32), 
  2265 ;;  p               2    5[BANK0 ] int 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  2268 ;;		 -> sprintf@f(5), 
  2269 ;;  w               2    9[BANK0 ] int 
  2270 ;;  i               2    7[BANK0 ] int 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  2    4[BANK0 ] int 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2280 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2281 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2283 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2284 ;;Total ram usage:        9 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    3
  2287 ;; This function calls:
  2288 ;;		_fputc
  2289 ;;		_fputs
  2290 ;;		_strlen
  2291 ;; This function is called by:
  2292 ;;		_dtoa
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _pad
  2298  0267                     _pad:
  2299                           
  2300                           ;incstack = 0
  2301                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2302                           ;pad@fp stored from wreg
  2303  0267  0020               	movlb	0	; select bank0
  2304  0268  00AB               	movwf	pad@fp
  2305  0269                     l1230:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2308  0269  0021               	movlb	1	; select bank1
  2309  026A  1C26               	btfss	_flags^(0+128),0
  2310  026B  2A6D               	goto	u1001
  2311  026C  2A6E               	goto	u1000
  2312  026D                     u1001:
  2313  026D  2A77               	goto	l1234
  2314  026E                     u1000:
  2315  026E                     l1232:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2318  026E  0020               	movlb	0	; select bank0
  2319  026F  082B               	movf	pad@fp,w
  2320  0270  00FC               	movwf	??_pad
  2321  0271  087C               	movf	??_pad,w
  2322  0272  00F8               	movwf	fputs@fp
  2323  0273  0824               	movf	pad@buf,w
  2324  0274  3180  20EC  3182   	fcall	_fputs
  2325  0277                     l1234:
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2328  0277  0020               	movlb	0	; select bank0
  2329  0278  1BA6               	btfsc	pad@p+1,7
  2330  0279  2A7B               	goto	u1011
  2331  027A  2A7C               	goto	u1010
  2332  027B                     u1011:
  2333  027B  2A81               	goto	l1238
  2334  027C                     u1010:
  2335  027C                     l1236:
  2336  027C  0826               	movf	pad@p+1,w
  2337  027D  00AA               	movwf	pad@w+1
  2338  027E  0825               	movf	pad@p,w
  2339  027F  00A9               	movwf	pad@w
  2340  0280  2A83               	goto	l652
  2341  0281                     l1238:
  2342  0281  01A9               	clrf	pad@w
  2343  0282  01AA               	clrf	pad@w+1
  2344  0283                     l652:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2347  0283  01A7               	clrf	pad@i
  2348  0284  01A8               	clrf	pad@i+1
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2351  0285  2A97               	goto	l1244
  2352  0286                     l1240:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2355  0286  3020               	movlw	32
  2356  0287  00F0               	movwf	fputc@c
  2357  0288  3000               	movlw	0
  2358  0289  00F1               	movwf	fputc@c+1
  2359  028A  0020               	movlb	0	; select bank0
  2360  028B  082B               	movf	pad@fp,w
  2361  028C  00FC               	movwf	??_pad
  2362  028D  087C               	movf	??_pad,w
  2363  028E  00F2               	movwf	fputc@fp
  2364  028F  3181  21C1  3182   	fcall	_fputc
  2365  0292                     l1242:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2368  0292  3001               	movlw	1
  2369  0293  0020               	movlb	0	; select bank0
  2370  0294  07A7               	addwf	pad@i,f
  2371  0295  3000               	movlw	0
  2372  0296  3DA8               	addwfc	pad@i+1,f
  2373  0297                     l1244:
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2376  0297  0828               	movf	pad@i+1,w
  2377  0298  3A80               	xorlw	128
  2378  0299  00FC               	movwf	??_pad
  2379  029A  082A               	movf	pad@w+1,w
  2380  029B  3A80               	xorlw	128
  2381  029C  027C               	subwf	??_pad,w
  2382  029D  1D03               	skipz
  2383  029E  2AA1               	goto	u1025
  2384  029F  0829               	movf	pad@w,w
  2385  02A0  0227               	subwf	pad@i,w
  2386  02A1                     u1025:
  2387  02A1  1C03               	skipc
  2388  02A2  2AA4               	goto	u1021
  2389  02A3  2AA5               	goto	u1020
  2390  02A4                     u1021:
  2391  02A4  2A86               	goto	l1240
  2392  02A5                     u1020:
  2393  02A5                     l655:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2396  02A5  0021               	movlb	1	; select bank1
  2397  02A6  1826               	btfsc	_flags^(0+128),0
  2398  02A7  2AA9               	goto	u1031
  2399  02A8  2AAA               	goto	u1030
  2400  02A9                     u1031:
  2401  02A9  2AB3               	goto	l1248
  2402  02AA                     u1030:
  2403  02AA                     l1246:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2406  02AA  0020               	movlb	0	; select bank0
  2407  02AB  082B               	movf	pad@fp,w
  2408  02AC  00FC               	movwf	??_pad
  2409  02AD  087C               	movf	??_pad,w
  2410  02AE  00F8               	movwf	fputs@fp
  2411  02AF  0824               	movf	pad@buf,w
  2412  02B0  3180  20EC  3182   	fcall	_fputs
  2413  02B3                     l1248:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2416  02B3  0020               	movlb	0	; select bank0
  2417  02B4  0824               	movf	pad@buf,w
  2418  02B5  3180  2076  3182   	fcall	_strlen
  2419  02B8  0020               	movlb	0	; select bank0
  2420  02B9  0829               	movf	pad@w,w
  2421  02BA  0770               	addwf	?_strlen,w
  2422  02BB  00A4               	movwf	?_pad
  2423  02BC  082A               	movf	pad@w+1,w
  2424  02BD  3D71               	addwfc	?_strlen+1,w
  2425  02BE  00A5               	movwf	?_pad+1
  2426  02BF                     l657:
  2427  02BF  0008               	return
  2428  02C0                     __end_of_pad:
  2429                           
  2430                           	psect	text6
  2431  0076                     __ptext6:	
  2432 ;; *************** function _strlen *****************
  2433 ;; Defined at:
  2434 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  s               1    wreg     PTR const unsigned char 
  2437 ;;		 -> dbuf(32), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  s               1    4[COMMON] PTR const unsigned char 
  2440 ;;		 -> dbuf(32), 
  2441 ;;  a               1    3[COMMON] PTR const unsigned char 
  2442 ;;		 -> dbuf(32), 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  2    0[COMMON] unsigned int 
  2445 ;; Registers used:
  2446 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2453 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;Total ram usage:        5 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_pad
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function _strlen
  2467  0076                     _strlen:
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2471                           ;strlen@s stored from wreg
  2472  0076  00F4               	movwf	strlen@s
  2473  0077                     l1152:
  2474  0077  0874               	movf	strlen@s,w
  2475  0078  00F2               	movwf	??_strlen
  2476  0079  0872               	movf	??_strlen,w
  2477  007A  00F3               	movwf	strlen@a
  2478  007B  2880               	goto	l1156
  2479  007C                     l1154:
  2480  007C  3001               	movlw	1
  2481  007D  00F2               	movwf	??_strlen
  2482  007E  0872               	movf	??_strlen,w
  2483  007F  07F4               	addwf	strlen@s,f
  2484  0080                     l1156:
  2485  0080  0874               	movf	strlen@s,w
  2486  0081  0086               	movwf	6
  2487  0082  0187               	clrf	7
  2488  0083  0801               	movf	1,w
  2489  0084  1D03               	btfss	3,2
  2490  0085  2887               	goto	u781
  2491  0086  2888               	goto	u780
  2492  0087                     u781:
  2493  0087  287C               	goto	l1154
  2494  0088                     u780:
  2495  0088                     l1158:
  2496  0088  0873               	movf	strlen@a,w
  2497  0089  0274               	subwf	strlen@s,w
  2498  008A  00F0               	movwf	?_strlen
  2499  008B  01F1               	clrf	?_strlen+1
  2500  008C  1BF0               	btfsc	?_strlen,7
  2501  008D  03F1               	decf	?_strlen+1,f
  2502  008E                     l750:
  2503  008E  0008               	return
  2504  008F                     __end_of_strlen:
  2505                           
  2506                           	psect	text7
  2507  00EC                     __ptext7:	
  2508 ;; *************** function _fputs *****************
  2509 ;; Defined at:
  2510 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  s               1    wreg     PTR const unsigned char 
  2513 ;;		 -> dbuf(32), 
  2514 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2515 ;;		 -> sprintf@f(5), 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2518 ;;		 -> dbuf(32), 
  2519 ;;  i               2    1[BANK0 ] int 
  2520 ;;  c               1    0[BANK0 ] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  2    8[COMMON] int 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2530 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2531 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2532 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2533 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2534 ;;Total ram usage:        8 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    2
  2537 ;; This function calls:
  2538 ;;		_fputc
  2539 ;; This function is called by:
  2540 ;;		_pad
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _fputs
  2546  00EC                     _fputs:
  2547                           
  2548                           ;incstack = 0
  2549                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2550                           ;fputs@s stored from wreg
  2551  00EC  0020               	movlb	0	; select bank0
  2552  00ED  00A3               	movwf	fputs@s
  2553  00EE                     l1144:
  2554  00EE  01A1               	clrf	fputs@i
  2555  00EF  01A2               	clrf	fputs@i+1
  2556  00F0  2904               	goto	l1150
  2557  00F1                     l1146:
  2558  00F1  0820               	movf	fputs@c,w
  2559  00F2  00F9               	movwf	??_fputs
  2560  00F3  01FA               	clrf	??_fputs+1
  2561  00F4  0879               	movf	??_fputs,w
  2562  00F5  00F0               	movwf	fputc@c
  2563  00F6  087A               	movf	??_fputs+1,w
  2564  00F7  00F1               	movwf	fputc@c+1
  2565  00F8  0878               	movf	fputs@fp,w
  2566  00F9  00FB               	movwf	??_fputs+2
  2567  00FA  087B               	movf	??_fputs+2,w
  2568  00FB  00F2               	movwf	fputc@fp
  2569  00FC  3181  21C1  3180   	fcall	_fputc
  2570  00FF                     l1148:
  2571  00FF  3001               	movlw	1
  2572  0100  0020               	movlb	0	; select bank0
  2573  0101  07A1               	addwf	fputs@i,f
  2574  0102  3000               	movlw	0
  2575  0103  3DA2               	addwfc	fputs@i+1,f
  2576  0104                     l1150:
  2577  0104  0821               	movf	fputs@i,w
  2578  0105  0723               	addwf	fputs@s,w
  2579  0106  00F9               	movwf	??_fputs
  2580  0107  0879               	movf	??_fputs,w
  2581  0108  0086               	movwf	6
  2582  0109  0187               	clrf	7
  2583  010A  0801               	movf	1,w
  2584  010B  00FA               	movwf	??_fputs+1
  2585  010C  087A               	movf	??_fputs+1,w
  2586  010D  00A0               	movwf	fputs@c
  2587  010E  0820               	movf	fputs@c,w
  2588  010F  1D03               	btfss	3,2
  2589  0110  2912               	goto	u771
  2590  0111  2913               	goto	u770
  2591  0112                     u771:
  2592  0112  28F1               	goto	l1146
  2593  0113                     u770:
  2594  0113                     l741:
  2595  0113  0008               	return
  2596  0114                     __end_of_fputs:
  2597                           
  2598                           	psect	text8
  2599  008F                     __ptext8:	
  2600 ;; *************** function _abs *****************
  2601 ;; Defined at:
  2602 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  a               2    3[COMMON] int 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  2    3[COMMON] int 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2619 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;Total ram usage:        4 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_dtoa
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _abs
  2631  008F                     _abs:
  2632  008F                     l1252:	
  2633                           ;incstack = 0
  2634                           ; Regs used in _abs: [wreg+status,2+status,0]
  2635                           
  2636  008F  0874               	movf	abs@a+1,w
  2637  0090  3A80               	xorlw	128
  2638  0091  00F5               	movwf	??_abs
  2639  0092  3080               	movlw	128
  2640  0093  0275               	subwf	??_abs,w
  2641  0094  1D03               	skipz
  2642  0095  2898               	goto	u1045
  2643  0096  3001               	movlw	1
  2644  0097  0273               	subwf	abs@a,w
  2645  0098                     u1045:
  2646  0098  1803               	skipnc
  2647  0099  289B               	goto	u1041
  2648  009A  289C               	goto	u1040
  2649  009B                     u1041:
  2650  009B  28A8               	goto	l718
  2651  009C                     u1040:
  2652  009C                     l1254:
  2653  009C  0973               	comf	abs@a,w
  2654  009D  00F5               	movwf	??_abs
  2655  009E  0974               	comf	abs@a+1,w
  2656  009F  00F6               	movwf	??_abs+1
  2657  00A0  0AF5               	incf	??_abs,f
  2658  00A1  1903               	skipnz
  2659  00A2  0AF6               	incf	??_abs+1,f
  2660  00A3  0875               	movf	??_abs,w
  2661  00A4  00F3               	movwf	?_abs
  2662  00A5  0876               	movf	??_abs+1,w
  2663  00A6  00F4               	movwf	?_abs+1
  2664  00A7  28A8               	goto	l721
  2665  00A8                     l718:
  2666  00A8                     l721:
  2667  00A8  0008               	return
  2668  00A9                     __end_of_abs:
  2669                           
  2670                           	psect	text9
  2671  038E                     __ptext9:	
  2672 ;; *************** function ___aomod *****************
  2673 ;; Defined at:
  2674 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  divisor         8    0[BANK0 ] long long 
  2677 ;;  dividend        8    8[BANK0 ] long long 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  sign            1    2[COMMON] unsigned char 
  2680 ;;  counter         1    1[COMMON] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  8    0[BANK0 ] long long 
  2683 ;; Registers used:
  2684 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2690 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2693 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2694 ;;Total ram usage:       19 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_dtoa
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function ___aomod
  2705  038E                     ___aomod:
  2706  038E                     l1200:	
  2707                           ;incstack = 0
  2708                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  2709                           
  2710  038E  01F2               	clrf	___aomod@sign
  2711  038F                     l1202:
  2712  038F  3028               	movlw	low ___aomod@dividend
  2713  0390  0086               	movwf	6
  2714  0391  3000               	movlw	high ___aomod@dividend
  2715  0392  0087               	movwf	7
  2716  0393  3F47               	moviw [7]fsr1
  2717  0394  00F0               	movwf	??___aomod
  2718  0395  1FF0               	btfss	??___aomod,7
  2719  0396  2B98               	goto	u901
  2720  0397  2B99               	goto	u900
  2721  0398                     u901:
  2722  0398  2BBA               	goto	l1206
  2723  0399                     u900:
  2724  0399                     l1204:
  2725  0399  0020               	movlb	0	; select bank0
  2726  039A  09A8               	comf	___aomod@dividend,f
  2727  039B  09A9               	comf	___aomod@dividend+1,f
  2728  039C  09AA               	comf	___aomod@dividend+2,f
  2729  039D  09AB               	comf	___aomod@dividend+3,f
  2730  039E  09AC               	comf	___aomod@dividend+4,f
  2731  039F  09AD               	comf	___aomod@dividend+5,f
  2732  03A0  09AE               	comf	___aomod@dividend+6,f
  2733  03A1  09AF               	comf	___aomod@dividend+7,f
  2734  03A2  0AA8               	incf	___aomod@dividend,f
  2735  03A3  1D03               	skipz
  2736  03A4  2BB8               	goto	u91lld
  2737  03A5  0AA9               	incf	___aomod@dividend+1,f
  2738  03A6  1D03               	skipz
  2739  03A7  2BB8               	goto	u91lld
  2740  03A8  0AAA               	incf	___aomod@dividend+2,f
  2741  03A9  1D03               	skipz
  2742  03AA  2BB8               	goto	u91lld
  2743  03AB  0AAB               	incf	___aomod@dividend+3,f
  2744  03AC  1D03               	skipz
  2745  03AD  2BB8               	goto	u91lld
  2746  03AE  0AAC               	incf	___aomod@dividend+4,f
  2747  03AF  1D03               	skipz
  2748  03B0  2BB8               	goto	u91lld
  2749  03B1  0AAD               	incf	___aomod@dividend+5,f
  2750  03B2  1D03               	skipz
  2751  03B3  2BB8               	goto	u91lld
  2752  03B4  0AAE               	incf	___aomod@dividend+6,f
  2753  03B5  1D03               	skipz
  2754  03B6  2BB8               	goto	u91lld
  2755  03B7  0AAF               	incf	___aomod@dividend+7,f
  2756  03B8                     u91lld:
  2757  03B8  01F2               	clrf	___aomod@sign
  2758  03B9  0AF2               	incf	___aomod@sign,f
  2759  03BA                     l1206:
  2760  03BA  3020               	movlw	low ___aomod@divisor
  2761  03BB  0086               	movwf	6
  2762  03BC  3000               	movlw	high ___aomod@divisor
  2763  03BD  0087               	movwf	7
  2764  03BE  3F47               	moviw [7]fsr1
  2765  03BF  00F0               	movwf	??___aomod
  2766  03C0  1FF0               	btfss	??___aomod,7
  2767  03C1  2BC3               	goto	u921
  2768  03C2  2BC4               	goto	u920
  2769  03C3                     u921:
  2770  03C3  2BE3               	goto	l1210
  2771  03C4                     u920:
  2772  03C4                     l1208:
  2773  03C4  0020               	movlb	0	; select bank0
  2774  03C5  09A0               	comf	___aomod@divisor,f
  2775  03C6  09A1               	comf	___aomod@divisor+1,f
  2776  03C7  09A2               	comf	___aomod@divisor+2,f
  2777  03C8  09A3               	comf	___aomod@divisor+3,f
  2778  03C9  09A4               	comf	___aomod@divisor+4,f
  2779  03CA  09A5               	comf	___aomod@divisor+5,f
  2780  03CB  09A6               	comf	___aomod@divisor+6,f
  2781  03CC  09A7               	comf	___aomod@divisor+7,f
  2782  03CD  0AA0               	incf	___aomod@divisor,f
  2783  03CE  1D03               	skipz
  2784  03CF  2BE3               	goto	u93lld
  2785  03D0  0AA1               	incf	___aomod@divisor+1,f
  2786  03D1  1D03               	skipz
  2787  03D2  2BE3               	goto	u93lld
  2788  03D3  0AA2               	incf	___aomod@divisor+2,f
  2789  03D4  1D03               	skipz
  2790  03D5  2BE3               	goto	u93lld
  2791  03D6  0AA3               	incf	___aomod@divisor+3,f
  2792  03D7  1D03               	skipz
  2793  03D8  2BE3               	goto	u93lld
  2794  03D9  0AA4               	incf	___aomod@divisor+4,f
  2795  03DA  1D03               	skipz
  2796  03DB  2BE3               	goto	u93lld
  2797  03DC  0AA5               	incf	___aomod@divisor+5,f
  2798  03DD  1D03               	skipz
  2799  03DE  2BE3               	goto	u93lld
  2800  03DF  0AA6               	incf	___aomod@divisor+6,f
  2801  03E0  1D03               	skipz
  2802  03E1  2BE3               	goto	u93lld
  2803  03E2  0AA7               	incf	___aomod@divisor+7,f
  2804  03E3                     u93lld:
  2805  03E3                     l1210:
  2806  03E3  0020               	movlb	0	; select bank0
  2807  03E4  0820               	movf	___aomod@divisor,w
  2808  03E5  0421               	iorwf	___aomod@divisor+1,w
  2809  03E6  0422               	iorwf	___aomod@divisor+2,w
  2810  03E7  0423               	iorwf	___aomod@divisor+3,w
  2811  03E8  0424               	iorwf	___aomod@divisor+4,w
  2812  03E9  0425               	iorwf	___aomod@divisor+5,w
  2813  03EA  0426               	iorwf	___aomod@divisor+6,w
  2814  03EB  0427               	iorwf	___aomod@divisor+7,w
  2815  03EC  1903               	skipnz
  2816  03ED  2BEF               	goto	u941
  2817  03EE  2BF0               	goto	u940
  2818  03EF                     u941:
  2819  03EF  2C43               	goto	l1226
  2820  03F0                     u940:
  2821  03F0                     l1212:
  2822  03F0  01F1               	clrf	___aomod@counter
  2823  03F1  0AF1               	incf	___aomod@counter,f
  2824  03F2  2BFF               	goto	l1218
  2825  03F3                     l1214:
  2826  03F3  35A0               	lslf	___aomod@divisor,f
  2827  03F4  0DA1               	rlf	___aomod@divisor+1,f
  2828  03F5  0DA2               	rlf	___aomod@divisor+2,f
  2829  03F6  0DA3               	rlf	___aomod@divisor+3,f
  2830  03F7  0DA4               	rlf	___aomod@divisor+4,f
  2831  03F8  0DA5               	rlf	___aomod@divisor+5,f
  2832  03F9  0DA6               	rlf	___aomod@divisor+6,f
  2833  03FA  0DA7               	rlf	___aomod@divisor+7,f
  2834  03FB                     l1216:
  2835  03FB  3001               	movlw	1
  2836  03FC  00F0               	movwf	??___aomod
  2837  03FD  0870               	movf	??___aomod,w
  2838  03FE  07F1               	addwf	___aomod@counter,f
  2839  03FF                     l1218:
  2840  03FF  1FA7               	btfss	___aomod@divisor+7,7
  2841  0400  2C02               	goto	u951
  2842  0401  2C03               	goto	u950
  2843  0402                     u951:
  2844  0402  2BF3               	goto	l1214
  2845  0403                     u950:
  2846  0403                     l1220:
  2847  0403  0827               	movf	___aomod@divisor+7,w
  2848  0404  022F               	subwf	___aomod@dividend+7,w
  2849  0405  1D03               	skipz
  2850  0406  2C21               	goto	u965
  2851  0407  0826               	movf	___aomod@divisor+6,w
  2852  0408  022E               	subwf	___aomod@dividend+6,w
  2853  0409  1D03               	skipz
  2854  040A  2C21               	goto	u965
  2855  040B  0825               	movf	___aomod@divisor+5,w
  2856  040C  022D               	subwf	___aomod@dividend+5,w
  2857  040D  1D03               	skipz
  2858  040E  2C21               	goto	u965
  2859  040F  0824               	movf	___aomod@divisor+4,w
  2860  0410  022C               	subwf	___aomod@dividend+4,w
  2861  0411  1D03               	skipz
  2862  0412  2C21               	goto	u965
  2863  0413  0823               	movf	___aomod@divisor+3,w
  2864  0414  022B               	subwf	___aomod@dividend+3,w
  2865  0415  1D03               	skipz
  2866  0416  2C21               	goto	u965
  2867  0417  0822               	movf	___aomod@divisor+2,w
  2868  0418  022A               	subwf	___aomod@dividend+2,w
  2869  0419  1D03               	skipz
  2870  041A  2C21               	goto	u965
  2871  041B  0821               	movf	___aomod@divisor+1,w
  2872  041C  0229               	subwf	___aomod@dividend+1,w
  2873  041D  1D03               	skipz
  2874  041E  2C21               	goto	u965
  2875  041F  0820               	movf	___aomod@divisor,w
  2876  0420  0228               	subwf	___aomod@dividend,w
  2877  0421                     u965:
  2878  0421  1C03               	skipc
  2879  0422  2C24               	goto	u961
  2880  0423  2C25               	goto	u960
  2881  0424                     u961:
  2882  0424  2C35               	goto	l1224
  2883  0425                     u960:
  2884  0425                     l1222:
  2885  0425  0820               	movf	___aomod@divisor,w
  2886  0426  02A8               	subwf	___aomod@dividend,f
  2887  0427  0821               	movf	___aomod@divisor+1,w
  2888  0428  3BA9               	subwfb	___aomod@dividend+1,f
  2889  0429  0822               	movf	___aomod@divisor+2,w
  2890  042A  3BAA               	subwfb	___aomod@dividend+2,f
  2891  042B  0823               	movf	___aomod@divisor+3,w
  2892  042C  3BAB               	subwfb	___aomod@dividend+3,f
  2893  042D  0824               	movf	___aomod@divisor+4,w
  2894  042E  3BAC               	subwfb	___aomod@dividend+4,f
  2895  042F  0825               	movf	___aomod@divisor+5,w
  2896  0430  3BAD               	subwfb	___aomod@dividend+5,f
  2897  0431  0826               	movf	___aomod@divisor+6,w
  2898  0432  3BAE               	subwfb	___aomod@dividend+6,f
  2899  0433  0827               	movf	___aomod@divisor+7,w
  2900  0434  3BAF               	subwfb	___aomod@dividend+7,f
  2901  0435                     l1224:
  2902  0435  36A7               	lsrf	___aomod@divisor+7,f
  2903  0436  0CA6               	rrf	___aomod@divisor+6,f
  2904  0437  0CA5               	rrf	___aomod@divisor+5,f
  2905  0438  0CA4               	rrf	___aomod@divisor+4,f
  2906  0439  0CA3               	rrf	___aomod@divisor+3,f
  2907  043A  0CA2               	rrf	___aomod@divisor+2,f
  2908  043B  0CA1               	rrf	___aomod@divisor+1,f
  2909  043C  0CA0               	rrf	___aomod@divisor,f
  2910  043D  3001               	movlw	1
  2911  043E  02F1               	subwf	___aomod@counter,f
  2912  043F  1D03               	btfss	3,2
  2913  0440  2C42               	goto	u971
  2914  0441  2C43               	goto	u970
  2915  0442                     u971:
  2916  0442  2C03               	goto	l1220
  2917  0443                     u970:
  2918  0443                     l1226:
  2919  0443  0872               	movf	___aomod@sign,w
  2920  0444  1903               	btfsc	3,2
  2921  0445  2C47               	goto	u981
  2922  0446  2C48               	goto	u980
  2923  0447                     u981:
  2924  0447  2C66               	goto	l275
  2925  0448                     u980:
  2926  0448                     l1228:
  2927  0448  09A8               	comf	___aomod@dividend,f
  2928  0449  09A9               	comf	___aomod@dividend+1,f
  2929  044A  09AA               	comf	___aomod@dividend+2,f
  2930  044B  09AB               	comf	___aomod@dividend+3,f
  2931  044C  09AC               	comf	___aomod@dividend+4,f
  2932  044D  09AD               	comf	___aomod@dividend+5,f
  2933  044E  09AE               	comf	___aomod@dividend+6,f
  2934  044F  09AF               	comf	___aomod@dividend+7,f
  2935  0450  0AA8               	incf	___aomod@dividend,f
  2936  0451  1D03               	skipz
  2937  0452  2C66               	goto	u99lld
  2938  0453  0AA9               	incf	___aomod@dividend+1,f
  2939  0454  1D03               	skipz
  2940  0455  2C66               	goto	u99lld
  2941  0456  0AAA               	incf	___aomod@dividend+2,f
  2942  0457  1D03               	skipz
  2943  0458  2C66               	goto	u99lld
  2944  0459  0AAB               	incf	___aomod@dividend+3,f
  2945  045A  1D03               	skipz
  2946  045B  2C66               	goto	u99lld
  2947  045C  0AAC               	incf	___aomod@dividend+4,f
  2948  045D  1D03               	skipz
  2949  045E  2C66               	goto	u99lld
  2950  045F  0AAD               	incf	___aomod@dividend+5,f
  2951  0460  1D03               	skipz
  2952  0461  2C66               	goto	u99lld
  2953  0462  0AAE               	incf	___aomod@dividend+6,f
  2954  0463  1D03               	skipz
  2955  0464  2C66               	goto	u99lld
  2956  0465  0AAF               	incf	___aomod@dividend+7,f
  2957  0466                     u99lld:
  2958  0466                     l275:
  2959  0466  0020               	movlb	0	; select bank0
  2960  0467  0828               	movf	___aomod@dividend,w
  2961  0468  00A0               	movwf	?___aomod
  2962  0469  0829               	movf	___aomod@dividend+1,w
  2963  046A  00A1               	movwf	?___aomod+1
  2964  046B  082A               	movf	___aomod@dividend+2,w
  2965  046C  00A2               	movwf	?___aomod+2
  2966  046D  082B               	movf	___aomod@dividend+3,w
  2967  046E  00A3               	movwf	?___aomod+3
  2968  046F  082C               	movf	___aomod@dividend+4,w
  2969  0470  00A4               	movwf	?___aomod+4
  2970  0471  082D               	movf	___aomod@dividend+5,w
  2971  0472  00A5               	movwf	?___aomod+5
  2972  0473  082E               	movf	___aomod@dividend+6,w
  2973  0474  00A6               	movwf	?___aomod+6
  2974  0475  082F               	movf	___aomod@dividend+7,w
  2975  0476  00A7               	movwf	?___aomod+7
  2976  0477                     l276:
  2977  0477  0008               	return
  2978  0478                     __end_of___aomod:
  2979                           
  2980                           	psect	text10
  2981  0478                     __ptext10:	
  2982 ;; *************** function ___aodiv *****************
  2983 ;; Defined at:
  2984 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  divisor         8    0[BANK0 ] long long 
  2987 ;;  dividend        8    8[BANK0 ] long long 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  quotient        8    3[COMMON] long long 
  2990 ;;  sign            1    2[COMMON] unsigned char 
  2991 ;;  counter         1    1[COMMON] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  8    0[BANK0 ] long long 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3001 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;Total ram usage:       27 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_dtoa
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function ___aodiv
  3016  0478                     ___aodiv:
  3017  0478                     l1162:	
  3018                           ;incstack = 0
  3019                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3020                           
  3021  0478  01F2               	clrf	___aodiv@sign
  3022  0479                     l1164:
  3023  0479  3020               	movlw	low ___aodiv@divisor
  3024  047A  0086               	movwf	6
  3025  047B  3000               	movlw	high ___aodiv@divisor
  3026  047C  0087               	movwf	7
  3027  047D  3F47               	moviw [7]fsr1
  3028  047E  00F0               	movwf	??___aodiv
  3029  047F  1FF0               	btfss	??___aodiv,7
  3030  0480  2C82               	goto	u791
  3031  0481  2C83               	goto	u790
  3032  0482                     u791:
  3033  0482  2CA4               	goto	l1168
  3034  0483                     u790:
  3035  0483                     l1166:
  3036  0483  0020               	movlb	0	; select bank0
  3037  0484  09A0               	comf	___aodiv@divisor,f
  3038  0485  09A1               	comf	___aodiv@divisor+1,f
  3039  0486  09A2               	comf	___aodiv@divisor+2,f
  3040  0487  09A3               	comf	___aodiv@divisor+3,f
  3041  0488  09A4               	comf	___aodiv@divisor+4,f
  3042  0489  09A5               	comf	___aodiv@divisor+5,f
  3043  048A  09A6               	comf	___aodiv@divisor+6,f
  3044  048B  09A7               	comf	___aodiv@divisor+7,f
  3045  048C  0AA0               	incf	___aodiv@divisor,f
  3046  048D  1D03               	skipz
  3047  048E  2CA2               	goto	u80lld
  3048  048F  0AA1               	incf	___aodiv@divisor+1,f
  3049  0490  1D03               	skipz
  3050  0491  2CA2               	goto	u80lld
  3051  0492  0AA2               	incf	___aodiv@divisor+2,f
  3052  0493  1D03               	skipz
  3053  0494  2CA2               	goto	u80lld
  3054  0495  0AA3               	incf	___aodiv@divisor+3,f
  3055  0496  1D03               	skipz
  3056  0497  2CA2               	goto	u80lld
  3057  0498  0AA4               	incf	___aodiv@divisor+4,f
  3058  0499  1D03               	skipz
  3059  049A  2CA2               	goto	u80lld
  3060  049B  0AA5               	incf	___aodiv@divisor+5,f
  3061  049C  1D03               	skipz
  3062  049D  2CA2               	goto	u80lld
  3063  049E  0AA6               	incf	___aodiv@divisor+6,f
  3064  049F  1D03               	skipz
  3065  04A0  2CA2               	goto	u80lld
  3066  04A1  0AA7               	incf	___aodiv@divisor+7,f
  3067  04A2                     u80lld:
  3068  04A2  01F2               	clrf	___aodiv@sign
  3069  04A3  0AF2               	incf	___aodiv@sign,f
  3070  04A4                     l1168:
  3071  04A4  3028               	movlw	low ___aodiv@dividend
  3072  04A5  0086               	movwf	6
  3073  04A6  3000               	movlw	high ___aodiv@dividend
  3074  04A7  0087               	movwf	7
  3075  04A8  3F47               	moviw [7]fsr1
  3076  04A9  00F0               	movwf	??___aodiv
  3077  04AA  1FF0               	btfss	??___aodiv,7
  3078  04AB  2CAD               	goto	u811
  3079  04AC  2CAE               	goto	u810
  3080  04AD                     u811:
  3081  04AD  2CD1               	goto	l1174
  3082  04AE                     u810:
  3083  04AE                     l1170:
  3084  04AE  0020               	movlb	0	; select bank0
  3085  04AF  09A8               	comf	___aodiv@dividend,f
  3086  04B0  09A9               	comf	___aodiv@dividend+1,f
  3087  04B1  09AA               	comf	___aodiv@dividend+2,f
  3088  04B2  09AB               	comf	___aodiv@dividend+3,f
  3089  04B3  09AC               	comf	___aodiv@dividend+4,f
  3090  04B4  09AD               	comf	___aodiv@dividend+5,f
  3091  04B5  09AE               	comf	___aodiv@dividend+6,f
  3092  04B6  09AF               	comf	___aodiv@dividend+7,f
  3093  04B7  0AA8               	incf	___aodiv@dividend,f
  3094  04B8  1D03               	skipz
  3095  04B9  2CCD               	goto	u82lld
  3096  04BA  0AA9               	incf	___aodiv@dividend+1,f
  3097  04BB  1D03               	skipz
  3098  04BC  2CCD               	goto	u82lld
  3099  04BD  0AAA               	incf	___aodiv@dividend+2,f
  3100  04BE  1D03               	skipz
  3101  04BF  2CCD               	goto	u82lld
  3102  04C0  0AAB               	incf	___aodiv@dividend+3,f
  3103  04C1  1D03               	skipz
  3104  04C2  2CCD               	goto	u82lld
  3105  04C3  0AAC               	incf	___aodiv@dividend+4,f
  3106  04C4  1D03               	skipz
  3107  04C5  2CCD               	goto	u82lld
  3108  04C6  0AAD               	incf	___aodiv@dividend+5,f
  3109  04C7  1D03               	skipz
  3110  04C8  2CCD               	goto	u82lld
  3111  04C9  0AAE               	incf	___aodiv@dividend+6,f
  3112  04CA  1D03               	skipz
  3113  04CB  2CCD               	goto	u82lld
  3114  04CC  0AAF               	incf	___aodiv@dividend+7,f
  3115  04CD                     u82lld:
  3116  04CD                     l1172:
  3117  04CD  3001               	movlw	1
  3118  04CE  00F0               	movwf	??___aodiv
  3119  04CF  0870               	movf	??___aodiv,w
  3120  04D0  06F2               	xorwf	___aodiv@sign,f
  3121  04D1                     l1174:
  3122  04D1  3073               	movlw	low ___aodiv@quotient
  3123  04D2  0086               	movwf	6
  3124  04D3  3000               	movlw	high ___aodiv@quotient
  3125  04D4  0087               	movwf	7
  3126  04D5  3008               	movlw	8
  3127  04D6  00F0               	movwf	??___aodiv
  3128  04D7  3000               	movlw	0
  3129  04D8                     u830:
  3130  04D8  001E               	movwi fsr1++
  3131  04D9  0BF0               	decfsz	??___aodiv,f
  3132  04DA  2CD8               	goto	u830
  3133  04DB                     l1176:
  3134  04DB  0020               	movlb	0	; select bank0
  3135  04DC  0820               	movf	___aodiv@divisor,w
  3136  04DD  0421               	iorwf	___aodiv@divisor+1,w
  3137  04DE  0422               	iorwf	___aodiv@divisor+2,w
  3138  04DF  0423               	iorwf	___aodiv@divisor+3,w
  3139  04E0  0424               	iorwf	___aodiv@divisor+4,w
  3140  04E1  0425               	iorwf	___aodiv@divisor+5,w
  3141  04E2  0426               	iorwf	___aodiv@divisor+6,w
  3142  04E3  0427               	iorwf	___aodiv@divisor+7,w
  3143  04E4  1903               	skipnz
  3144  04E5  2CE7               	goto	u841
  3145  04E6  2CE8               	goto	u840
  3146  04E7                     u841:
  3147  04E7  2D44               	goto	l1196
  3148  04E8                     u840:
  3149  04E8                     l1178:
  3150  04E8  01F1               	clrf	___aodiv@counter
  3151  04E9  0AF1               	incf	___aodiv@counter,f
  3152  04EA  2CF7               	goto	l1184
  3153  04EB                     l1180:
  3154  04EB  35A0               	lslf	___aodiv@divisor,f
  3155  04EC  0DA1               	rlf	___aodiv@divisor+1,f
  3156  04ED  0DA2               	rlf	___aodiv@divisor+2,f
  3157  04EE  0DA3               	rlf	___aodiv@divisor+3,f
  3158  04EF  0DA4               	rlf	___aodiv@divisor+4,f
  3159  04F0  0DA5               	rlf	___aodiv@divisor+5,f
  3160  04F1  0DA6               	rlf	___aodiv@divisor+6,f
  3161  04F2  0DA7               	rlf	___aodiv@divisor+7,f
  3162  04F3                     l1182:
  3163  04F3  3001               	movlw	1
  3164  04F4  00F0               	movwf	??___aodiv
  3165  04F5  0870               	movf	??___aodiv,w
  3166  04F6  07F1               	addwf	___aodiv@counter,f
  3167  04F7                     l1184:
  3168  04F7  1FA7               	btfss	___aodiv@divisor+7,7
  3169  04F8  2CFA               	goto	u851
  3170  04F9  2CFB               	goto	u850
  3171  04FA                     u851:
  3172  04FA  2CEB               	goto	l1180
  3173  04FB                     u850:
  3174  04FB                     l1186:
  3175  04FB  35F3               	lslf	___aodiv@quotient,f
  3176  04FC  0DF4               	rlf	___aodiv@quotient+1,f
  3177  04FD  0DF5               	rlf	___aodiv@quotient+2,f
  3178  04FE  0DF6               	rlf	___aodiv@quotient+3,f
  3179  04FF  0DF7               	rlf	___aodiv@quotient+4,f
  3180  0500  0DF8               	rlf	___aodiv@quotient+5,f
  3181  0501  0DF9               	rlf	___aodiv@quotient+6,f
  3182  0502  0DFA               	rlf	___aodiv@quotient+7,f
  3183  0503                     l1188:
  3184  0503  0827               	movf	___aodiv@divisor+7,w
  3185  0504  022F               	subwf	___aodiv@dividend+7,w
  3186  0505  1D03               	skipz
  3187  0506  2D21               	goto	u865
  3188  0507  0826               	movf	___aodiv@divisor+6,w
  3189  0508  022E               	subwf	___aodiv@dividend+6,w
  3190  0509  1D03               	skipz
  3191  050A  2D21               	goto	u865
  3192  050B  0825               	movf	___aodiv@divisor+5,w
  3193  050C  022D               	subwf	___aodiv@dividend+5,w
  3194  050D  1D03               	skipz
  3195  050E  2D21               	goto	u865
  3196  050F  0824               	movf	___aodiv@divisor+4,w
  3197  0510  022C               	subwf	___aodiv@dividend+4,w
  3198  0511  1D03               	skipz
  3199  0512  2D21               	goto	u865
  3200  0513  0823               	movf	___aodiv@divisor+3,w
  3201  0514  022B               	subwf	___aodiv@dividend+3,w
  3202  0515  1D03               	skipz
  3203  0516  2D21               	goto	u865
  3204  0517  0822               	movf	___aodiv@divisor+2,w
  3205  0518  022A               	subwf	___aodiv@dividend+2,w
  3206  0519  1D03               	skipz
  3207  051A  2D21               	goto	u865
  3208  051B  0821               	movf	___aodiv@divisor+1,w
  3209  051C  0229               	subwf	___aodiv@dividend+1,w
  3210  051D  1D03               	skipz
  3211  051E  2D21               	goto	u865
  3212  051F  0820               	movf	___aodiv@divisor,w
  3213  0520  0228               	subwf	___aodiv@dividend,w
  3214  0521                     u865:
  3215  0521  1C03               	skipc
  3216  0522  2D24               	goto	u861
  3217  0523  2D25               	goto	u860
  3218  0524                     u861:
  3219  0524  2D36               	goto	l1194
  3220  0525                     u860:
  3221  0525                     l1190:
  3222  0525  0820               	movf	___aodiv@divisor,w
  3223  0526  02A8               	subwf	___aodiv@dividend,f
  3224  0527  0821               	movf	___aodiv@divisor+1,w
  3225  0528  3BA9               	subwfb	___aodiv@dividend+1,f
  3226  0529  0822               	movf	___aodiv@divisor+2,w
  3227  052A  3BAA               	subwfb	___aodiv@dividend+2,f
  3228  052B  0823               	movf	___aodiv@divisor+3,w
  3229  052C  3BAB               	subwfb	___aodiv@dividend+3,f
  3230  052D  0824               	movf	___aodiv@divisor+4,w
  3231  052E  3BAC               	subwfb	___aodiv@dividend+4,f
  3232  052F  0825               	movf	___aodiv@divisor+5,w
  3233  0530  3BAD               	subwfb	___aodiv@dividend+5,f
  3234  0531  0826               	movf	___aodiv@divisor+6,w
  3235  0532  3BAE               	subwfb	___aodiv@dividend+6,f
  3236  0533  0827               	movf	___aodiv@divisor+7,w
  3237  0534  3BAF               	subwfb	___aodiv@dividend+7,f
  3238  0535                     l1192:
  3239  0535  1473               	bsf	___aodiv@quotient,0
  3240  0536                     l1194:
  3241  0536  36A7               	lsrf	___aodiv@divisor+7,f
  3242  0537  0CA6               	rrf	___aodiv@divisor+6,f
  3243  0538  0CA5               	rrf	___aodiv@divisor+5,f
  3244  0539  0CA4               	rrf	___aodiv@divisor+4,f
  3245  053A  0CA3               	rrf	___aodiv@divisor+3,f
  3246  053B  0CA2               	rrf	___aodiv@divisor+2,f
  3247  053C  0CA1               	rrf	___aodiv@divisor+1,f
  3248  053D  0CA0               	rrf	___aodiv@divisor,f
  3249  053E  3001               	movlw	1
  3250  053F  02F1               	subwf	___aodiv@counter,f
  3251  0540  1D03               	btfss	3,2
  3252  0541  2D43               	goto	u871
  3253  0542  2D44               	goto	u870
  3254  0543                     u871:
  3255  0543  2CFB               	goto	l1186
  3256  0544                     u870:
  3257  0544                     l1196:
  3258  0544  0872               	movf	___aodiv@sign,w
  3259  0545  1903               	btfsc	3,2
  3260  0546  2D48               	goto	u881
  3261  0547  2D49               	goto	u880
  3262  0548                     u881:
  3263  0548  2D67               	goto	l262
  3264  0549                     u880:
  3265  0549                     l1198:
  3266  0549  09F3               	comf	___aodiv@quotient,f
  3267  054A  09F4               	comf	___aodiv@quotient+1,f
  3268  054B  09F5               	comf	___aodiv@quotient+2,f
  3269  054C  09F6               	comf	___aodiv@quotient+3,f
  3270  054D  09F7               	comf	___aodiv@quotient+4,f
  3271  054E  09F8               	comf	___aodiv@quotient+5,f
  3272  054F  09F9               	comf	___aodiv@quotient+6,f
  3273  0550  09FA               	comf	___aodiv@quotient+7,f
  3274  0551  0AF3               	incf	___aodiv@quotient,f
  3275  0552  1D03               	skipz
  3276  0553  2D67               	goto	u89lld
  3277  0554  0AF4               	incf	___aodiv@quotient+1,f
  3278  0555  1D03               	skipz
  3279  0556  2D67               	goto	u89lld
  3280  0557  0AF5               	incf	___aodiv@quotient+2,f
  3281  0558  1D03               	skipz
  3282  0559  2D67               	goto	u89lld
  3283  055A  0AF6               	incf	___aodiv@quotient+3,f
  3284  055B  1D03               	skipz
  3285  055C  2D67               	goto	u89lld
  3286  055D  0AF7               	incf	___aodiv@quotient+4,f
  3287  055E  1D03               	skipz
  3288  055F  2D67               	goto	u89lld
  3289  0560  0AF8               	incf	___aodiv@quotient+5,f
  3290  0561  1D03               	skipz
  3291  0562  2D67               	goto	u89lld
  3292  0563  0AF9               	incf	___aodiv@quotient+6,f
  3293  0564  1D03               	skipz
  3294  0565  2D67               	goto	u89lld
  3295  0566  0AFA               	incf	___aodiv@quotient+7,f
  3296  0567                     u89lld:
  3297  0567                     l262:
  3298  0567  0873               	movf	___aodiv@quotient,w
  3299  0568  0020               	movlb	0	; select bank0
  3300  0569  00A0               	movwf	?___aodiv
  3301  056A  0874               	movf	___aodiv@quotient+1,w
  3302  056B  00A1               	movwf	?___aodiv+1
  3303  056C  0875               	movf	___aodiv@quotient+2,w
  3304  056D  00A2               	movwf	?___aodiv+2
  3305  056E  0876               	movf	___aodiv@quotient+3,w
  3306  056F  00A3               	movwf	?___aodiv+3
  3307  0570  0877               	movf	___aodiv@quotient+4,w
  3308  0571  00A4               	movwf	?___aodiv+4
  3309  0572  0878               	movf	___aodiv@quotient+5,w
  3310  0573  00A5               	movwf	?___aodiv+5
  3311  0574  0879               	movf	___aodiv@quotient+6,w
  3312  0575  00A6               	movwf	?___aodiv+6
  3313  0576  087A               	movf	___aodiv@quotient+7,w
  3314  0577  00A7               	movwf	?___aodiv+7
  3315  0578                     l263:
  3316  0578  0008               	return
  3317  0579                     __end_of___aodiv:
  3318                           
  3319                           	psect	text11
  3320  031A                     __ptext11:	
  3321 ;; *************** function _ctoa *****************
  3322 ;; Defined at:
  3323 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  fp              1    wreg     PTR struct _IO_FILE
  3326 ;;		 -> sprintf@f(5), 
  3327 ;;  c               1    8[COMMON] unsigned char 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  fp              1    4[BANK0 ] PTR struct _IO_FILE
  3330 ;;		 -> sprintf@f(5), 
  3331 ;;  w               2    2[BANK0 ] int 
  3332 ;;  l               2    0[BANK0 ] int 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  2    8[COMMON] int 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3343 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;Total ram usage:       10 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    2
  3349 ;; This function calls:
  3350 ;;		_fputc
  3351 ;; This function is called by:
  3352 ;;		_vfpfcnvrt
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function _ctoa
  3358  031A                     _ctoa:
  3359                           
  3360                           ;incstack = 0
  3361                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3362                           ;ctoa@fp stored from wreg
  3363  031A  0020               	movlb	0	; select bank0
  3364  031B  00A4               	movwf	ctoa@fp
  3365  031C                     l1256:
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3368  031C  0021               	movlb	1	; select bank1
  3369  031D  0822               	movf	_width^(0+128),w
  3370  031E  0423               	iorwf	(_width+1)^(0+128),w
  3371  031F  1D03               	btfss	3,2
  3372  0320  2B22               	goto	u1051
  3373  0321  2B23               	goto	u1050
  3374  0322                     u1051:
  3375  0322  2B2B               	goto	l1260
  3376  0323                     u1050:
  3377  0323                     l1258:
  3378  0323  0823               	movf	(_width+1)^(0+128),w
  3379  0324  0020               	movlb	0	; select bank0
  3380  0325  00A3               	movwf	ctoa@w+1
  3381  0326  0021               	movlb	1	; select bank1
  3382  0327  0822               	movf	_width^(0+128),w
  3383  0328  0020               	movlb	0	; select bank0
  3384  0329  00A2               	movwf	ctoa@w
  3385  032A  2B34               	goto	l1262
  3386  032B                     l1260:
  3387  032B  0822               	movf	_width^(0+128),w
  3388  032C  3EFF               	addlw	255
  3389  032D  0020               	movlb	0	; select bank0
  3390  032E  00A2               	movwf	ctoa@w
  3391  032F  30FF               	movlw	255
  3392  0330  0021               	movlb	1	; select bank1
  3393  0331  3D23               	addwfc	(_width+1)^(0+128),w
  3394  0332  0020               	movlb	0	; select bank0
  3395  0333  00A3               	movwf	ctoa@w+1
  3396  0334                     l1262:
  3397                           
  3398                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3399  0334  0021               	movlb	1	; select bank1
  3400  0335  1C26               	btfss	_flags^(0+128),0
  3401  0336  2B38               	goto	u1061
  3402  0337  2B39               	goto	u1060
  3403  0338                     u1061:
  3404  0338  2B48               	goto	l1266
  3405  0339                     u1060:
  3406  0339                     l1264:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3409  0339  0878               	movf	ctoa@c,w
  3410  033A  00FA               	movwf	??_ctoa
  3411  033B  01FB               	clrf	??_ctoa+1
  3412  033C  087A               	movf	??_ctoa,w
  3413  033D  00F0               	movwf	fputc@c
  3414  033E  087B               	movf	??_ctoa+1,w
  3415  033F  00F1               	movwf	fputc@c+1
  3416  0340  0020               	movlb	0	; select bank0
  3417  0341  0824               	movf	ctoa@fp,w
  3418  0342  00FC               	movwf	??_ctoa+2
  3419  0343  087C               	movf	??_ctoa+2,w
  3420  0344  00F2               	movwf	fputc@fp
  3421  0345  3181  21C1  3183   	fcall	_fputc
  3422  0348                     l1266:
  3423                           
  3424                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3425  0348  0020               	movlb	0	; select bank0
  3426  0349  1BA3               	btfsc	ctoa@w+1,7
  3427  034A  2B4C               	goto	u1071
  3428  034B  2B4D               	goto	u1070
  3429  034C                     u1071:
  3430  034C  2B4E               	goto	l1270
  3431  034D                     u1070:
  3432  034D  2B50               	goto	l668
  3433  034E                     l1270:
  3434  034E  01A2               	clrf	ctoa@w
  3435  034F  01A3               	clrf	ctoa@w+1
  3436  0350                     l668:
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3439  0350  01A0               	clrf	ctoa@l
  3440  0351  01A1               	clrf	ctoa@l+1
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3443  0352  2B64               	goto	l1276
  3444  0353                     l1272:
  3445                           
  3446                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3447  0353  3020               	movlw	32
  3448  0354  00F0               	movwf	fputc@c
  3449  0355  3000               	movlw	0
  3450  0356  00F1               	movwf	fputc@c+1
  3451  0357  0020               	movlb	0	; select bank0
  3452  0358  0824               	movf	ctoa@fp,w
  3453  0359  00FA               	movwf	??_ctoa
  3454  035A  087A               	movf	??_ctoa,w
  3455  035B  00F2               	movwf	fputc@fp
  3456  035C  3181  21C1  3183   	fcall	_fputc
  3457  035F                     l1274:
  3458                           
  3459                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3460  035F  3001               	movlw	1
  3461  0360  0020               	movlb	0	; select bank0
  3462  0361  07A0               	addwf	ctoa@l,f
  3463  0362  3000               	movlw	0
  3464  0363  3DA1               	addwfc	ctoa@l+1,f
  3465  0364                     l1276:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3468  0364  0821               	movf	ctoa@l+1,w
  3469  0365  3A80               	xorlw	128
  3470  0366  00FA               	movwf	??_ctoa
  3471  0367  0823               	movf	ctoa@w+1,w
  3472  0368  3A80               	xorlw	128
  3473  0369  027A               	subwf	??_ctoa,w
  3474  036A  1D03               	skipz
  3475  036B  2B6E               	goto	u1085
  3476  036C  0822               	movf	ctoa@w,w
  3477  036D  0220               	subwf	ctoa@l,w
  3478  036E                     u1085:
  3479  036E  1C03               	skipc
  3480  036F  2B71               	goto	u1081
  3481  0370  2B72               	goto	u1080
  3482  0371                     u1081:
  3483  0371  2B53               	goto	l1272
  3484  0372                     u1080:
  3485  0372                     l671:
  3486                           
  3487                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3488  0372  0021               	movlb	1	; select bank1
  3489  0373  1826               	btfsc	_flags^(0+128),0
  3490  0374  2B76               	goto	u1091
  3491  0375  2B77               	goto	u1090
  3492  0376                     u1091:
  3493  0376  2B86               	goto	l1280
  3494  0377                     u1090:
  3495  0377                     l1278:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3498  0377  0878               	movf	ctoa@c,w
  3499  0378  00FA               	movwf	??_ctoa
  3500  0379  01FB               	clrf	??_ctoa+1
  3501  037A  087A               	movf	??_ctoa,w
  3502  037B  00F0               	movwf	fputc@c
  3503  037C  087B               	movf	??_ctoa+1,w
  3504  037D  00F1               	movwf	fputc@c+1
  3505  037E  0020               	movlb	0	; select bank0
  3506  037F  0824               	movf	ctoa@fp,w
  3507  0380  00FC               	movwf	??_ctoa+2
  3508  0381  087C               	movf	??_ctoa+2,w
  3509  0382  00F2               	movwf	fputc@fp
  3510  0383  3181  21C1  3183   	fcall	_fputc
  3511  0386                     l1280:
  3512                           
  3513                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3514  0386  0020               	movlb	0	; select bank0
  3515  0387  0820               	movf	ctoa@l,w
  3516  0388  3E01               	addlw	1
  3517  0389  00F8               	movwf	?_ctoa
  3518  038A  3000               	movlw	0
  3519  038B  3D21               	addwfc	ctoa@l+1,w
  3520  038C  00F9               	movwf	?_ctoa+1
  3521  038D                     l673:
  3522  038D  0008               	return
  3523  038E                     __end_of_ctoa:
  3524                           
  3525                           	psect	text12
  3526  01C1                     __ptext12:	
  3527 ;; *************** function _fputc *****************
  3528 ;; Defined at:
  3529 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  c               2    0[COMMON] int 
  3532 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  3533 ;;		 -> sprintf@f(5), 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  2    0[COMMON] int 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3545 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;Total ram usage:        8 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    1
  3552 ;; This function calls:
  3553 ;;		_putch
  3554 ;; This function is called by:
  3555 ;;		_pad
  3556 ;;		_ctoa
  3557 ;;		_vfpfcnvrt
  3558 ;;		_fputs
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           
  3563                           ;psect for function _fputc
  3564  01C1                     _fputc:
  3565  01C1                     l1128:	
  3566                           ;incstack = 0
  3567                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3568                           
  3569  01C1  0872               	movf	fputc@fp,w
  3570  01C2  1903               	btfsc	3,2
  3571  01C3  29C5               	goto	u731
  3572  01C4  29C6               	goto	u730
  3573  01C5                     u731:
  3574  01C5  29CB               	goto	l1132
  3575  01C6                     u730:
  3576  01C6                     l1130:
  3577  01C6  0872               	movf	fputc@fp,w
  3578  01C7  1D03               	btfss	3,2
  3579  01C8  29CA               	goto	u741
  3580  01C9  29CB               	goto	u740
  3581  01CA                     u741:
  3582  01CA  29D0               	goto	l1134
  3583  01CB                     u740:
  3584  01CB                     l1132:
  3585  01CB  0870               	movf	fputc@c,w
  3586  01CC  3180  205D  3181   	fcall	_putch
  3587  01CF  2A0F               	goto	l733
  3588  01D0                     l1134:
  3589  01D0  0872               	movf	fputc@fp,w
  3590  01D1  3E03               	addlw	3
  3591  01D2  0086               	movwf	6
  3592  01D3  0187               	clrf	7
  3593  01D4  0016               	moviw fsr1++
  3594  01D5  0401               	iorwf	1,w
  3595  01D6  1903               	btfsc	3,2
  3596  01D7  29D9               	goto	u751
  3597  01D8  29DA               	goto	u750
  3598  01D9                     u751:
  3599  01D9  29F7               	goto	l1138
  3600  01DA                     u750:
  3601  01DA                     l1136:
  3602  01DA  0872               	movf	fputc@fp,w
  3603  01DB  3E03               	addlw	3
  3604  01DC  0086               	movwf	6
  3605  01DD  0187               	clrf	7
  3606  01DE  3F40               	moviw [0]fsr1
  3607  01DF  00F3               	movwf	??_fputc
  3608  01E0  3F41               	moviw [1]fsr1
  3609  01E1  00F4               	movwf	??_fputc+1
  3610  01E2  0A72               	incf	fputc@fp,w
  3611  01E3  0086               	movwf	6
  3612  01E4  0187               	clrf	7
  3613  01E5  3F40               	moviw [0]fsr1
  3614  01E6  00F5               	movwf	??_fputc+2
  3615  01E7  3F41               	moviw [1]fsr1
  3616  01E8  00F6               	movwf	??_fputc+3
  3617  01E9  0876               	movf	??_fputc+3,w
  3618  01EA  3A80               	xorlw	128
  3619  01EB  00F7               	movwf	??_fputc+4
  3620  01EC  0874               	movf	??_fputc+1,w
  3621  01ED  3A80               	xorlw	128
  3622  01EE  0277               	subwf	??_fputc+4,w
  3623  01EF  1D03               	skipz
  3624  01F0  29F3               	goto	u765
  3625  01F1  0873               	movf	??_fputc,w
  3626  01F2  0275               	subwf	??_fputc+2,w
  3627  01F3                     u765:
  3628  01F3  1803               	skipnc
  3629  01F4  29F6               	goto	u761
  3630  01F5  29F7               	goto	u760
  3631  01F6                     u761:
  3632  01F6  2A0F               	goto	l733
  3633  01F7                     u760:
  3634  01F7                     l1138:
  3635  01F7  0870               	movf	fputc@c,w
  3636  01F8  00F3               	movwf	??_fputc
  3637  01F9  0872               	movf	fputc@fp,w
  3638  01FA  0086               	movwf	6
  3639  01FB  0187               	clrf	7
  3640  01FC  0A72               	incf	fputc@fp,w
  3641  01FD  0084               	movwf	4
  3642  01FE  0185               	clrf	5
  3643  01FF  0800               	movf	0,w
  3644  0200  0701               	addwf	1,w
  3645  0201  00F4               	movwf	??_fputc+1
  3646  0202  0874               	movf	??_fputc+1,w
  3647  0203  0086               	movwf	6
  3648  0204  0187               	clrf	7
  3649  0205  0873               	movf	??_fputc,w
  3650  0206  0081               	movwf	1
  3651  0207                     l1140:
  3652  0207  0A72               	incf	fputc@fp,w
  3653  0208  0086               	movwf	6
  3654  0209  0187               	clrf	7
  3655  020A  3001               	movlw	1
  3656  020B  0781               	addwf	1,f
  3657  020C  3141               	addfsr 1,1
  3658  020D  1803               	skipnc
  3659  020E  0A81               	incf	1,f
  3660  020F                     l733:
  3661  020F  0008               	return
  3662  0210                     __end_of_fputc:
  3663                           
  3664                           	psect	text13
  3665  005D                     __ptext13:	
  3666 ;; *************** function _putch *****************
  3667 ;; Defined at:
  3668 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  c               1    wreg     unsigned char 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  c               1    0[COMMON] unsigned char 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;Total ram usage:        0 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_fputc
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function _putch
  3697  005D                     _putch:
  3698  005D                     l744:	
  3699                           ;incstack = 0
  3700                           ; Regs used in _putch: [wreg]
  3701                           
  3702  005D  0008               	return
  3703  005E                     __end_of_putch:
  3704                           
  3705                           	psect	text14
  3706  00A9                     __ptext14:	
  3707 ;; *************** function _serial_print *****************
  3708 ;; Defined at:
  3709 ;;		line 70 in file "analog_serial.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  str             1    wreg     PTR unsigned char 
  3712 ;;		 -> main@valStr(16), 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  str             1    4[COMMON] PTR unsigned char 
  3715 ;;		 -> main@valStr(16), 
  3716 ;;  i               2    2[COMMON] int 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3727 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3730 ;;Total ram usage:        4 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    1
  3733 ;; This function calls:
  3734 ;;		_serial_putch
  3735 ;; This function is called by:
  3736 ;;		_main
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           
  3741                           ;psect for function _serial_print
  3742  00A9                     _serial_print:
  3743                           
  3744                           ;incstack = 0
  3745                           ; Regs used in _serial_print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3746                           ;serial_print@str stored from wreg
  3747  00A9  00F4               	movwf	serial_print@str
  3748  00AA                     l1482:
  3749                           
  3750                           ;analog_serial.c: 71:     for( int i=0;1;++i ){
  3751  00AA  01F2               	clrf	serial_print@i
  3752  00AB  01F3               	clrf	serial_print@i+1
  3753  00AC                     l1484:
  3754                           
  3755                           ;analog_serial.c: 72:         if( str[i] == 0 ) break;
  3756  00AC  0872               	movf	serial_print@i,w
  3757  00AD  0774               	addwf	serial_print@str,w
  3758  00AE  00F1               	movwf	??_serial_print
  3759  00AF  0871               	movf	??_serial_print,w
  3760  00B0  0086               	movwf	6
  3761  00B1  0187               	clrf	7
  3762  00B2  0801               	movf	1,w
  3763  00B3  1D03               	btfss	3,2
  3764  00B4  28B6               	goto	u1441
  3765  00B5  28B7               	goto	u1440
  3766  00B6                     u1441:
  3767  00B6  28B8               	goto	l1488
  3768  00B7                     u1440:
  3769  00B7  28C7               	goto	l94
  3770  00B8                     l1488:
  3771                           
  3772                           ;analog_serial.c: 73:         serial_putch((unsigned char)(str[i]));
  3773  00B8  0872               	movf	serial_print@i,w
  3774  00B9  0774               	addwf	serial_print@str,w
  3775  00BA  00F1               	movwf	??_serial_print
  3776  00BB  0871               	movf	??_serial_print,w
  3777  00BC  0086               	movwf	6
  3778  00BD  0187               	clrf	7
  3779  00BE  0801               	movf	1,w
  3780  00BF  3180  206C  3180   	fcall	_serial_putch
  3781  00C2                     l1490:
  3782                           
  3783                           ;analog_serial.c: 74:     }
  3784  00C2  3001               	movlw	1
  3785  00C3  07F2               	addwf	serial_print@i,f
  3786  00C4  3000               	movlw	0
  3787  00C5  3DF3               	addwfc	serial_print@i+1,f
  3788  00C6  28AC               	goto	l1484
  3789  00C7                     l94:
  3790  00C7  0008               	return
  3791  00C8                     __end_of_serial_print:
  3792                           
  3793                           	psect	text15
  3794  006C                     __ptext15:	
  3795 ;; *************** function _serial_putch *****************
  3796 ;; Defined at:
  3797 ;;		line 60 in file "analog_serial.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  byte            1    wreg     unsigned char 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  byte            1    0[COMMON] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      void 
  3804 ;; Registers used:
  3805 ;;		wreg
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;Total ram usage:        1 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_serial_print
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           
  3825                           ;psect for function _serial_putch
  3826  006C                     _serial_putch:
  3827                           
  3828                           ;incstack = 0
  3829                           ; Regs used in _serial_putch: [wreg]
  3830                           ;serial_putch@byte stored from wreg
  3831  006C  00F0               	movwf	serial_putch@byte
  3832  006D                     l1396:
  3833  006D                     l78:	
  3834                           ;analog_serial.c: 61:     while(!TXIF);
  3835                           
  3836  006D  0020               	movlb	0	; select bank0
  3837  006E  1E11               	btfss	17,4	;volatile
  3838  006F  2871               	goto	u1311
  3839  0070  2872               	goto	u1310
  3840  0071                     u1311:
  3841  0071  286D               	goto	l78
  3842  0072                     u1310:
  3843  0072                     l1398:
  3844                           
  3845                           ;analog_serial.c: 62:     TX1REG = byte;
  3846  0072  0870               	movf	serial_putch@byte,w
  3847  0073  0023               	movlb	3	; select bank3
  3848  0074  009A               	movwf	26	;volatile
  3849  0075                     l81:
  3850  0075  0008               	return
  3851  0076                     __end_of_serial_putch:
  3852                           
  3853                           	psect	text16
  3854  0064                     __ptext16:	
  3855 ;; *************** function _serial_getch *****************
  3856 ;; Defined at:
  3857 ;;		line 65 in file "analog_serial.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      unsigned char 
  3864 ;; Registers used:
  3865 ;;		wreg
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; This function calls:
  3878 ;;		Nothing
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           
  3885                           ;psect for function _serial_getch
  3886  0064                     _serial_getch:
  3887  0064                     l1454:	
  3888                           ;incstack = 0
  3889                           ; Regs used in _serial_getch: [wreg]
  3890                           
  3891  0064                     l84:	
  3892                           ;analog_serial.c: 66:     while(!RCIF);
  3893                           
  3894  0064  0020               	movlb	0	; select bank0
  3895  0065  1E91               	btfss	17,5	;volatile
  3896  0066  2868               	goto	u1411
  3897  0067  2869               	goto	u1410
  3898  0068                     u1411:
  3899  0068  2864               	goto	l84
  3900  0069                     u1410:
  3901  0069                     l1456:
  3902                           
  3903                           ;analog_serial.c: 67:     return RC1REG;
  3904  0069  0023               	movlb	3	; select bank3
  3905  006A  0819               	movf	25,w	;volatile
  3906  006B                     l87:
  3907  006B  0008               	return
  3908  006C                     __end_of_serial_getch:
  3909                           
  3910                           	psect	text17
  3911  0210                     __ptext17:	
  3912 ;; *************** function _init *****************
  3913 ;; Defined at:
  3914 ;;		line 18 in file "analog_serial.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  baudrate        4    0[BANK0 ] unsigned long 
  3917 ;;  portA           1    4[BANK0 ] unsigned char 
  3918 ;;  portC           1    5[BANK0 ] unsigned char 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  X               2   10[BANK0 ] unsigned int 
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0, pclath, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3930 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3934 ;;Total ram usage:       12 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    1
  3937 ;; This function calls:
  3938 ;;		___lldiv
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function _init
  3946  0210                     _init:
  3947  0210                     l1436:	
  3948                           ;incstack = 0
  3949                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  3950                           
  3951                           
  3952                           ;analog_serial.c: 20:     ANSELA = portA & 0b11111100 ;
  3953  0210  0020               	movlb	0	; select bank0
  3954  0211  0824               	movf	init@portA,w
  3955  0212  39FC               	andlw	252
  3956  0213  0023               	movlb	3	; select bank3
  3957  0214  008C               	movwf	12	;volatile
  3958  0215                     l1438:
  3959                           
  3960                           ;analog_serial.c: 21:     ANSELC = portC ;
  3961  0215  0020               	movlb	0	; select bank0
  3962  0216  0825               	movf	init@portC,w
  3963  0217  0023               	movlb	3	; select bank3
  3964  0218  008E               	movwf	14	;volatile
  3965  0219                     l1440:
  3966                           
  3967                           ;analog_serial.c: 23:     TRISA = (portA & 0b11111100) | 0b00000010 ;
  3968  0219  0020               	movlb	0	; select bank0
  3969  021A  0824               	movf	init@portA,w
  3970  021B  39FC               	andlw	252
  3971  021C  3802               	iorlw	2
  3972  021D  0021               	movlb	1	; select bank1
  3973  021E  008C               	movwf	12	;volatile
  3974                           
  3975                           ;analog_serial.c: 24:     TRISC = portC ;
  3976  021F  0020               	movlb	0	; select bank0
  3977  0220  0825               	movf	init@portC,w
  3978  0221  0021               	movlb	1	; select bank1
  3979  0222  008E               	movwf	14	;volatile
  3980  0223                     l1442:
  3981                           
  3982                           ;analog_serial.c: 25:     PORTA = 0b00000000 ;
  3983  0223  0020               	movlb	0	; select bank0
  3984  0224  018C               	clrf	12	;volatile
  3985  0225                     l1444:
  3986                           
  3987                           ;analog_serial.c: 26:     PORTC = 0b00000000 ;
  3988  0225  018E               	clrf	14	;volatile
  3989                           
  3990                           ;analog_serial.c: 30:     ADCON1 = 0b10010000 ;
  3991  0226  3090               	movlw	144
  3992  0227  0021               	movlb	1	; select bank1
  3993  0228  009E               	movwf	30	;volatile
  3994                           
  3995                           ;analog_serial.c: 35:     RA0PPS = 0x14;
  3996  0229  3014               	movlw	20
  3997  022A  003D               	movlb	29	; select bank29
  3998  022B  0090               	movwf	16	;volatile
  3999                           
  4000                           ;analog_serial.c: 36:     RXPPS = 0x01;
  4001  022C  3001               	movlw	1
  4002  022D  003C               	movlb	28	; select bank28
  4003  022E  00A4               	movwf	36	;volatile
  4004                           
  4005                           ;analog_serial.c: 38:     TX1STA = 0x24;
  4006  022F  3024               	movlw	36
  4007  0230  0023               	movlb	3	; select bank3
  4008  0231  009E               	movwf	30	;volatile
  4009  0232                     l1446:
  4010                           
  4011                           ;analog_serial.c: 39:     BRG16 = 1;
  4012  0232  159F               	bsf	31,3	;volatile
  4013                           
  4014                           ;analog_serial.c: 40:     RC1STA = 0x90;
  4015  0233  3090               	movlw	144
  4016  0234  009D               	movwf	29	;volatile
  4017  0235                     l1448:
  4018                           
  4019                           ;analog_serial.c: 41:     unsigned int X= 32000000/baudrate/4 - 1;
  4020  0235  0020               	movlb	0	; select bank0
  4021  0236  0823               	movf	init@baudrate+3,w
  4022  0237  00F3               	movwf	___lldiv@divisor+3
  4023  0238  0822               	movf	init@baudrate+2,w
  4024  0239  00F2               	movwf	___lldiv@divisor+2
  4025  023A  0821               	movf	init@baudrate+1,w
  4026  023B  00F1               	movwf	___lldiv@divisor+1
  4027  023C  0820               	movf	init@baudrate,w
  4028  023D  00F0               	movwf	___lldiv@divisor
  4029  023E  3001               	movlw	1
  4030  023F  00F7               	movwf	___lldiv@dividend+3
  4031  0240  30E8               	movlw	232
  4032  0241  00F6               	movwf	___lldiv@dividend+2
  4033  0242  3048               	movlw	72
  4034  0243  00F5               	movwf	___lldiv@dividend+1
  4035  0244  3000               	movlw	0
  4036  0245  00F4               	movwf	___lldiv@dividend
  4037  0246  3182  22C0  3182   	fcall	___lldiv
  4038  0249  0870               	movf	?___lldiv,w
  4039  024A  0020               	movlb	0	; select bank0
  4040  024B  00A6               	movwf	??_init
  4041  024C  0871               	movf	?___lldiv+1,w
  4042  024D  00A7               	movwf	??_init+1
  4043  024E  0872               	movf	?___lldiv+2,w
  4044  024F  00A8               	movwf	??_init+2
  4045  0250  0873               	movf	?___lldiv+3,w
  4046  0251  00A9               	movwf	??_init+3
  4047  0252  3002               	movlw	2
  4048  0253                     u1405:
  4049  0253  36A9               	lsrf	??_init+3,f
  4050  0254  0CA8               	rrf	??_init+2,f
  4051  0255  0CA7               	rrf	??_init+1,f
  4052  0256  0CA6               	rrf	??_init,f
  4053  0257                     u1400:
  4054  0257  0B89               	decfsz	9,f
  4055  0258  2A53               	goto	u1405
  4056  0259  0826               	movf	??_init,w
  4057  025A  3EFF               	addlw	255
  4058  025B  00AA               	movwf	init@X
  4059  025C  30FF               	movlw	255
  4060  025D  3D27               	addwfc	??_init+1,w
  4061  025E  00AB               	movwf	init@X+1
  4062  025F                     l1450:
  4063                           
  4064                           ;analog_serial.c: 42:     SP1BRGH = X / 256;
  4065  025F  082B               	movf	init@X+1,w
  4066  0260  0023               	movlb	3	; select bank3
  4067  0261  009C               	movwf	28	;volatile
  4068  0262                     l1452:
  4069                           
  4070                           ;analog_serial.c: 43:     SP1BRGL = X % 256;
  4071  0262  0020               	movlb	0	; select bank0
  4072  0263  082A               	movf	init@X,w
  4073  0264  0023               	movlb	3	; select bank3
  4074  0265  009B               	movwf	27	;volatile
  4075  0266                     l69:
  4076  0266  0008               	return
  4077  0267                     __end_of_init:
  4078                           
  4079                           	psect	text18
  4080  02C0                     __ptext18:	
  4081 ;; *************** function ___lldiv *****************
  4082 ;; Defined at:
  4083 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\__lldiv.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  divisor         4    0[COMMON] unsigned long 
  4086 ;;  dividend        4    4[COMMON] unsigned long 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  quotient        4    9[COMMON] unsigned long 
  4089 ;;  counter         1   13[COMMON] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  4    0[COMMON] unsigned long 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4099 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;Total ram usage:       14 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_init
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           
  4113                           ;psect for function ___lldiv
  4114  02C0                     ___lldiv:
  4115  02C0                     l1400:	
  4116                           ;incstack = 0
  4117                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4118                           
  4119  02C0  3000               	movlw	0
  4120  02C1  00FC               	movwf	___lldiv@quotient+3
  4121  02C2  3000               	movlw	0
  4122  02C3  00FB               	movwf	___lldiv@quotient+2
  4123  02C4  3000               	movlw	0
  4124  02C5  00FA               	movwf	___lldiv@quotient+1
  4125  02C6  3000               	movlw	0
  4126  02C7  00F9               	movwf	___lldiv@quotient
  4127  02C8  0873               	movf	___lldiv@divisor+3,w
  4128  02C9  0472               	iorwf	___lldiv@divisor+2,w
  4129  02CA  0471               	iorwf	___lldiv@divisor+1,w
  4130  02CB  0470               	iorwf	___lldiv@divisor,w
  4131  02CC  1903               	skipnz
  4132  02CD  2ACF               	goto	u1321
  4133  02CE  2AD0               	goto	u1320
  4134  02CF                     u1321:
  4135  02CF  2B11               	goto	l1420
  4136  02D0                     u1320:
  4137  02D0                     l1402:
  4138  02D0  01FD               	clrf	___lldiv@counter
  4139  02D1  0AFD               	incf	___lldiv@counter,f
  4140  02D2  2ADE               	goto	l1406
  4141  02D3                     l1404:
  4142  02D3  3001               	movlw	1
  4143  02D4                     u1335:
  4144  02D4  35F0               	lslf	___lldiv@divisor,f
  4145  02D5  0DF1               	rlf	___lldiv@divisor+1,f
  4146  02D6  0DF2               	rlf	___lldiv@divisor+2,f
  4147  02D7  0DF3               	rlf	___lldiv@divisor+3,f
  4148  02D8  0B89               	decfsz	9,f
  4149  02D9  2AD4               	goto	u1335
  4150  02DA  3001               	movlw	1
  4151  02DB  00F8               	movwf	??___lldiv
  4152  02DC  0878               	movf	??___lldiv,w
  4153  02DD  07FD               	addwf	___lldiv@counter,f
  4154  02DE                     l1406:
  4155  02DE  1FF3               	btfss	___lldiv@divisor+3,7
  4156  02DF  2AE1               	goto	u1341
  4157  02E0  2AE2               	goto	u1340
  4158  02E1                     u1341:
  4159  02E1  2AD3               	goto	l1404
  4160  02E2                     u1340:
  4161  02E2                     l1408:
  4162  02E2  3001               	movlw	1
  4163  02E3                     u1355:
  4164  02E3  35F9               	lslf	___lldiv@quotient,f
  4165  02E4  0DFA               	rlf	___lldiv@quotient+1,f
  4166  02E5  0DFB               	rlf	___lldiv@quotient+2,f
  4167  02E6  0DFC               	rlf	___lldiv@quotient+3,f
  4168  02E7  0B89               	decfsz	9,f
  4169  02E8  2AE3               	goto	u1355
  4170  02E9                     l1410:
  4171  02E9  0873               	movf	___lldiv@divisor+3,w
  4172  02EA  0277               	subwf	___lldiv@dividend+3,w
  4173  02EB  1D03               	skipz
  4174  02EC  2AF7               	goto	u1365
  4175  02ED  0872               	movf	___lldiv@divisor+2,w
  4176  02EE  0276               	subwf	___lldiv@dividend+2,w
  4177  02EF  1D03               	skipz
  4178  02F0  2AF7               	goto	u1365
  4179  02F1  0871               	movf	___lldiv@divisor+1,w
  4180  02F2  0275               	subwf	___lldiv@dividend+1,w
  4181  02F3  1D03               	skipz
  4182  02F4  2AF7               	goto	u1365
  4183  02F5  0870               	movf	___lldiv@divisor,w
  4184  02F6  0274               	subwf	___lldiv@dividend,w
  4185  02F7                     u1365:
  4186  02F7  1C03               	skipc
  4187  02F8  2AFA               	goto	u1361
  4188  02F9  2AFB               	goto	u1360
  4189  02FA                     u1361:
  4190  02FA  2B04               	goto	l1416
  4191  02FB                     u1360:
  4192  02FB                     l1412:
  4193  02FB  0870               	movf	___lldiv@divisor,w
  4194  02FC  02F4               	subwf	___lldiv@dividend,f
  4195  02FD  0871               	movf	___lldiv@divisor+1,w
  4196  02FE  3BF5               	subwfb	___lldiv@dividend+1,f
  4197  02FF  0872               	movf	___lldiv@divisor+2,w
  4198  0300  3BF6               	subwfb	___lldiv@dividend+2,f
  4199  0301  0873               	movf	___lldiv@divisor+3,w
  4200  0302  3BF7               	subwfb	___lldiv@dividend+3,f
  4201  0303                     l1414:
  4202  0303  1479               	bsf	___lldiv@quotient,0
  4203  0304                     l1416:
  4204  0304  3001               	movlw	1
  4205  0305                     u1375:
  4206  0305  36F3               	lsrf	___lldiv@divisor+3,f
  4207  0306  0CF2               	rrf	___lldiv@divisor+2,f
  4208  0307  0CF1               	rrf	___lldiv@divisor+1,f
  4209  0308  0CF0               	rrf	___lldiv@divisor,f
  4210  0309  0B89               	decfsz	9,f
  4211  030A  2B05               	goto	u1375
  4212  030B                     l1418:
  4213  030B  3001               	movlw	1
  4214  030C  02FD               	subwf	___lldiv@counter,f
  4215  030D  1D03               	btfss	3,2
  4216  030E  2B10               	goto	u1381
  4217  030F  2B11               	goto	u1380
  4218  0310                     u1381:
  4219  0310  2AE2               	goto	l1408
  4220  0311                     u1380:
  4221  0311                     l1420:
  4222  0311  087C               	movf	___lldiv@quotient+3,w
  4223  0312  00F3               	movwf	?___lldiv+3
  4224  0313  087B               	movf	___lldiv@quotient+2,w
  4225  0314  00F2               	movwf	?___lldiv+2
  4226  0315  087A               	movf	___lldiv@quotient+1,w
  4227  0316  00F1               	movwf	?___lldiv+1
  4228  0317  0879               	movf	___lldiv@quotient,w
  4229  0318  00F0               	movwf	?___lldiv
  4230  0319                     l198:
  4231  0319  0008               	return
  4232  031A                     __end_of___lldiv:
  4233                           
  4234                           	psect	text19
  4235  0145                     __ptext19:	
  4236 ;; *************** function _analogRead *****************
  4237 ;; Defined at:
  4238 ;;		line 47 in file "analog_serial.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  pin             1    wreg     unsigned char 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  pin             1    8[COMMON] unsigned char 
  4243 ;;  val             2    9[COMMON] unsigned int 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  2    0[COMMON] unsigned int 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4254 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4255 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4256 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;Total ram usage:       11 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           
  4267                           ;psect for function _analogRead
  4268  0145                     _analogRead:
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in _analogRead: [wreg+status,2+status,0]
  4272                           ;analogRead@pin stored from wreg
  4273  0145  00F8               	movwf	analogRead@pin
  4274  0146                     l1460:
  4275                           
  4276                           ;analog_serial.c: 48:     ADCON0 = (unsigned char)( (pin << 2 ) | 1 );
  4277  0146  0878               	movf	analogRead@pin,w
  4278  0147  00F2               	movwf	??_analogRead
  4279  0148  3001               	movlw	1
  4280  0149                     u1425:
  4281  0149  35F2               	lslf	??_analogRead,f
  4282  014A  3EFF               	addlw	-1
  4283  014B  1D03               	skipz
  4284  014C  2949               	goto	u1425
  4285  014D  3572               	lslf	??_analogRead,w
  4286  014E  3801               	iorlw	1
  4287  014F  0021               	movlb	1	; select bank1
  4288  0150  009D               	movwf	29	;volatile
  4289  0151                     l1462:
  4290                           
  4291                           ;analog_serial.c: 49:     _delay((unsigned long)((5)*(32000000/4000000.0))) ;
  4292  0151  300D               	movlw	13
  4293  0152                     u1457:
  4294  0152  0B89               	decfsz	9,f
  4295  0153  2952               	goto	u1457
  4296  0154  0000               	nop
  4297  0155                     l1464:
  4298                           
  4299                           ;analog_serial.c: 51:     unsigned int val;;analog_serial.c: 52:      GO_nDONE = 1 ;
  4300  0155  0021               	movlb	1	; select bank1
  4301  0156  149D               	bsf	29,1	;volatile
  4302  0157                     l72:	
  4303                           ;analog_serial.c: 53:      while(GO_nDONE) ;
  4304                           
  4305  0157  189D               	btfsc	29,1	;volatile
  4306  0158  295A               	goto	u1431
  4307  0159  295B               	goto	u1430
  4308  015A                     u1431:
  4309  015A  2957               	goto	l72
  4310  015B                     u1430:
  4311  015B                     l1466:
  4312                           
  4313                           ;analog_serial.c: 54:      val = ADRESH ;
  4314  015B  081C               	movf	28,w	;volatile
  4315  015C  00F2               	movwf	??_analogRead
  4316  015D  01F3               	clrf	??_analogRead+1
  4317  015E  0872               	movf	??_analogRead,w
  4318  015F  00F9               	movwf	analogRead@val
  4319  0160  0873               	movf	??_analogRead+1,w
  4320  0161  00FA               	movwf	analogRead@val+1
  4321                           
  4322                           ;analog_serial.c: 55:      val = ( val << 8 ) | ADRESL ;
  4323  0162  081B               	movf	27,w	;volatile
  4324  0163  00F2               	movwf	??_analogRead
  4325  0164  01F3               	clrf	??_analogRead+1
  4326  0165  0879               	movf	analogRead@val,w
  4327  0166  00F5               	movwf	??_analogRead+3
  4328  0167  01F4               	clrf	??_analogRead+2
  4329  0168  0872               	movf	??_analogRead,w
  4330  0169  0474               	iorwf	??_analogRead+2,w
  4331  016A  00F6               	movwf	??_analogRead+4
  4332  016B  0873               	movf	??_analogRead+1,w
  4333  016C  0475               	iorwf	??_analogRead+3,w
  4334  016D  00F7               	movwf	??_analogRead+5
  4335  016E  0876               	movf	??_analogRead+4,w
  4336  016F  00F9               	movwf	analogRead@val
  4337  0170  0877               	movf	??_analogRead+5,w
  4338  0171  00FA               	movwf	analogRead@val+1
  4339                           
  4340                           ;analog_serial.c: 57:      return val ;
  4341  0172  087A               	movf	analogRead@val+1,w
  4342  0173  00F1               	movwf	?_analogRead+1
  4343  0174  0879               	movf	analogRead@val,w
  4344  0175  00F0               	movwf	?_analogRead
  4345  0176                     l75:
  4346  0176  0008               	return
  4347  0177                     __end_of_analogRead:
  4348  007E                     btemp	set	126	;btemp
  4349  007E                     wtemp0	set	126
  4350                           
  4351                           	psect	config
  4352                           
  4353                           ;Config register CONFIG1 @ 0x8007
  4354                           ;	Oscillator Selection Bits
  4355                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4356                           ;	Watchdog Timer Enable
  4357                           ;	WDTE = OFF, WDT disabled
  4358                           ;	Power-up Timer Enable
  4359                           ;	PWRTE = ON, PWRT enabled
  4360                           ;	MCLR Pin Function Select
  4361                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4362                           ;	Flash Program Memory Code Protection
  4363                           ;	CP = OFF, Program memory code protection is disabled
  4364                           ;	Brown-out Reset Enable
  4365                           ;	BOREN = ON, Brown-out Reset enabled
  4366                           ;	Clock Out Enable
  4367                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4368                           ;	Internal/External Switchover Mode
  4369                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  4370                           ;	Fail-Safe Clock Monitor Enable
  4371                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4372  8007                     	org	32775
  4373  8007  0F84               	dw	3972
  4374                           
  4375                           ;Config register CONFIG2 @ 0x8008
  4376                           ;	Flash Memory Self-Write Protection
  4377                           ;	WRT = OFF, Write protection off
  4378                           ;	Peripheral Pin Select one-way control
  4379                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  4380                           ;	Zero-cross detect disable
  4381                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  4382                           ;	Phase Lock Loop enable
  4383                           ;	PLLEN = ON, 4x PLL is always enabled
  4384                           ;	Stack Overflow/Underflow Reset Enable
  4385                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4386                           ;	Brown-out Reset Voltage Selection
  4387                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  4388                           ;	Low-Power Brown Out Reset
  4389                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4390                           ;	Low-Voltage Programming Enable
  4391                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4392  8008                     	org	32776
  4393  8008  1BFB               	dw	7163

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         40
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     28      68
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@valStr(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@valStr(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S414_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@valStr(BANK1[16]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@valStr(BANK1[16]), 

    serial_print@str	PTR unsigned char  size(1) Largest target is 16
		 -> main@valStr(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _vfpfcnvrt->_ctoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _serial_print->_serial_putch
    _init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   10226
                                             77 BANK0      2     2      0
                                              9 BANK1     19    19      0
                         _analogRead
                               _init
                       _serial_getch
                       _serial_print
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    9198
                                             13 COMMON     1     1      0
                                             71 BANK0      6     0      6
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8888
                                             63 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    8574
                                             46 BANK0     17    15      2
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5055
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3449
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1605
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                10     8      2    1602
                                              8 COMMON     5     3      2
                                              0 BANK0      5     5      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1290
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_print                                         4     4      0     145
                                              1 COMMON     4     4      0
                       _serial_putch
 ---------------------------------------------------------------------------------
 (2) _serial_putch                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _serial_getch                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                12     6      6     697
                                              0 BANK0     12     6      6
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _analogRead                                          11     9      2      68
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analogRead
   _init
     ___lldiv
   _serial_getch
   _serial_print
     _serial_putch
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      44       7       85.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Sep 15 11:14:26 2020

                     l72 0157                       l81 0075                       l75 0176  
                     l84 0064                       l69 0266                       l78 006D  
                     l94 00C7                       l87 006B                      l262 0567  
                    l263 0578                      l275 0466                      l276 0477  
                    l198 0319                      l704 0686                      l721 00A8  
                    l625 00EB                      l714 0144                      l652 0283  
                    l733 020F                      l741 0113                      l718 00A8  
                    l750 008E                      l671 0372                      l655 02A5  
                    l744 005D                      l673 038D                      l657 02BF  
                    l681 06F6                      l682 070E                      l668 0350  
                    l676 06D0                      l685 077E                      l677 06D9  
                    l699 07F4                      u730 01C6                      u810 04AE  
                    u731 01C5                      u811 04AD                      u740 01CB  
                    u900 0399                      u741 01CA                      u901 0398  
                    u750 01DA                      u830 04D8                      u751 01D9  
                    u760 01F7                      u840 04E8                      u920 03C4  
                    u761 01F6                      u841 04E7                      u921 03C3  
                    u850 04FB                      u770 0113                      u851 04FA  
                    u771 0112                      u860 0525                      u940 03F0  
                    u780 0088                      u765 01F3                      u861 0524  
                    u941 03EF                      u781 0087                      u870 0544  
                    u790 0483                      u950 0403                      u871 0543  
                    u791 0482                      u951 0402                      u880 0549  
                    u960 0425                      u881 0548                      u865 0521  
                    u961 0424                      u970 0443                      u971 0442  
                    u980 0448                      u981 0447                      u965 0421  
                    _abs 008F                      _pad 0267                      wreg 0009  
                   l1200 038E                     l1130 01C6                     l1210 03E3  
                   l1202 038F                     ?_abs 0073                     l1140 0207  
                   l1132 01CB                     l1220 0403                     l1212 03F0  
                   l1204 0399                     l1300 0704                     l1134 01D0  
                   l1222 0425                     l1214 03F3                     l1206 03BA  
                   l1150 0104                     l1230 0269                     l1310 0749  
                   l1302 0709                     l1400 02C0                     l1136 01DA  
                   l1128 01C1                     l1224 0435                     l1216 03FB  
                   l1208 03C4                     l1144 00EE                     l1152 0077  
                   l1240 0286                     l1232 026E                     l1320 07A6  
                   l1312 074D                     l1304 0713                     l1410 02E9  
                   l1402 02D0                     l1138 01F7                     l1170 04AE  
                   l1162 0478                     l1218 03FF                     l1226 0443  
                   l1146 00F1                     l1154 007C                     l1242 0292  
                   l1234 0277                     l1330 07CA                     l1322 07B4  
                   l1314 0751                     l1306 0716                     l1412 02FB  
                   l1404 02D3                     l1420 0311                     l1260 032B  
                   l1180 04EB                     l1172 04CD                     l1164 0479  
                   l1228 0448                     l1252 008F                     l1148 00FF  
                   l1156 0080                     l1244 0297                     l1236 027C  
                   l1332 07D0                     l1316 078C                     l1324 07B9  
                   l1308 071B                     l1500 01A0                     l1414 0303  
                   l1406 02DE                     l1270 034E                     l1262 0334  
                   l1190 0525                     l1182 04F3                     l1174 04D1  
                   l1166 0483                     l1254 009C                     l1158 0088  
                   l1246 02AA                     l1238 0281                     l1334 07D5  
                   l1326 07C0                     l1318 0799                     l1350 059D  
                   l1342 057B                     l1430 0132                     l1502 01BA  
                   l1416 0304                     l1408 02E2                     l1440 0219  
                   l1280 0386                     l1272 0353                     l1264 0339  
                   l1256 031C                     l1192 0535                     l1184 04F7  
                   l1176 04DB                     l1168 04A4                     l1248 02B3  
                   l1336 07D9                     l1328 07C5                     l1352 05AF  
                   l1360 05D1                     l1344 058C                     l1432 013C  
                   l1424 0116                     l1418 030B                     l1450 025F  
                   l1442 0223                     l1274 035F                     l1266 0348  
                   l1258 0323                     l1194 0536                     l1186 04FB  
                   l1178 04E8                     l1338 07E1                     l1290 06B2  
                   l1362 05E2                     l1354 05B7                     l1346 0594  
                   l1426 011A                     l1460 0146                     l1452 0262  
                   l1444 0225                     l1436 0210                     l1276 0364  
                   l1188 0503                     l1196 0544                     l1292 06D5  
                   l1284 0689                     l1372 062E                     l1364 05F3  
                   l1356 05C3                     l1348 0599                     l1428 011E  
                   l1462 0151                     l1446 0232                     l1438 0215  
                   l1454 0064                     l1278 0377                     l1198 0549  
                   l1294 06E8                     l1286 0699                     l1390 067C  
                   l1374 063F                     l1382 0658                     l1366 05FB  
                   l1470 00CA                     l1464 0155                     l1448 0235  
                   l1456 0069                     l1296 06EE                     l1288 06AC  
                   l1384 0660                     l1376 0647                     l1368 0614  
                   l1472 00D2                     l1466 015B                     l1490 00C2  
                   l1482 00AA                     l1298 06FE                     l1378 0652  
                   l1474 00D4                     l1396 006D                     l1484 00AC  
                   l1388 0663                     l1476 00D6                     l1492 0177  
                   l1398 0072                     l1478 00E3                     l1494 017A  
                   l1488 00B8                     l1496 018E                     l1498 0196  
                   ?_pad 0024                     STR_1 0800                     u1000 026E  
                   u1001 026D                     u1010 027C                     u1011 027B  
                   u1020 02A5                     u1100 06A4                     u1021 02A4  
                   u1101 06A2                     u1030 02AA                     u1110 06A5  
                   u1031 02A9                     u1040 009C                     u1200 07A6  
                   u1120 06B2                     u1041 009B                     u1025 02A1  
                   u1201 07A5                     u1121 06B1                     u1050 0323  
                   u1210 07B4                     u1051 0322                     u1211 07B3  
                   u1060 0339                     u1220 07B9                     u1140 06D5  
                   u1300 063F                     u1061 0338                     u1045 0098  
                   u1221 07B8                     u1205 07A2                     u1141 06D4  
                   u1301 063E                     u1310 0072                     u1070 034D  
                   u1230 07C0                     u1150 06E8                     u1311 0071  
                   u1071 034C                     u1231 07BF                     u1215 07B0  
                   u1151 06E7                     u1320 02D0                     u1400 0257  
                   u1080 0372                     u1240 07C5                     u1160 0704  
                   u1321 02CF                     u1081 0371                     u1241 07C4  
                   u1161 0703                     u1410 0069                     u1090 0377  
                   u1250 07D0                     u1170 0709                     u1411 0068  
                   u1091 0376                     u1251 07CF                     u1171 0708  
                   u1155 06E4                     u1340 02E2                     u1180 078C  
                   u1260 058C                     u1341 02E1                     u1405 0253  
                   u1085 036E                     u1181 078B                     u1261 058B  
                   u1430 015B                     u1190 0799                     u1270 05AF  
                   u1431 015A                     u1335 02D4                     u1191 0798  
                   u1271 05AE                     u1360 02FB                     u1440 00B7  
                   u1280 05E2                     u1425 0149                     u1361 02FA  
                   u1441 00B6                     u1185 0788                     u1281 05E1  
                   u1290 05F3                     u1355 02E3                     u1291 05F2  
                   u1380 0311                     u1381 0310                     u1365 02F7  
                   u1390 013C                     u1375 0305                     u1391 013B  
                   u1457 0152                     _RCIF 008D                     _TXIF 008C  
        serial_print@str 0074                     abs@a 0073                     _dbuf 00A8  
                   _ctoa 031A                     _main 0177                     _dtoa 0687  
                   _init 0210                     _prec 00A4                     _nout 00A0  
                   pad@i 0027                     pad@p 0025                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     pad@w 0029  
                   btemp 007E                     start 0002                    ??_abs 0075  
                  ??_pad 007C          __end_of___aodiv 0579                    ?_ctoa 0078  
                  ?_main 0070                    ?_dtoa 0030          __end_of___aomod 0478  
                  ?_init 0020                    _BRG16 0CFB          __end_of___lldiv 031A  
           vfpfcnvrt@fmt 004E                    _PORTA 000C                    _PORTC 000E  
                  _TRISA 008C                    _TRISC 008E                    _RXPPS 0E24  
                  u80lld 04A2                    u82lld 04CD                    u91lld 03B8  
                  u93lld 03E3                    u89lld 0567                    u99lld 0466  
                  _flags 00A6                    _fputc 01C1                    _fputs 00EC  
                  pad@fp 002B                    _width 00A2                    ctoa@c 0078  
                  _putch 005D                    ctoa@l 0020                    ctoa@w 0022  
                  main@c 00E3                    dtoa@d 0030                    dtoa@i 004C  
                  dtoa@n 0044                    dtoa@p 003E                    dtoa@s 0042  
                  dtoa@w 0040                    init@X 002A         serial_putch@byte 0070  
                  status 0003                    wtemp0 007E          __end_of_sprintf 00EC  
        __initialization 07F5             __end_of_ctoa 038E             __end_of_main 01C1  
           __end_of_dtoa 07F5             __end_of_init 0267                   ??_ctoa 007A  
                 ??_main 006D                   ??_dtoa 0038                   ??_init 0026  
                 _ADCON0 009D                   _ADCON1 009E                   ?_fputc 0070  
                 ?_fputs 0078                   _ADRESH 009C                   _ADRESL 009B  
                 _ANSELA 018C                   ?_putch 0070                   _ANSELC 018E  
                 _RA0PPS 0E90                   _RC1REG 0199                   _RC1STA 019D  
                 _OSCCON 0099                   u113lld 06D0                   _TX1REG 019A  
                 _TX1STA 019E             vfprintf@cfmt 0065                ??___aodiv 0070  
              ??___aomod 0070                ??___lldiv 0078                   pad@buf 0024  
                 ctoa@fp 0024                   dtoa@fp 003D                   _strlen 0076  
                 fputc@c 0070                   fputs@c 0020                   fputs@i 0021  
                 fputs@s 0023                   putch@c 0070         __end_of_vfprintf 0145  
              ??_sprintf 007D  __end_of__initialization 07FD           __pcstackCOMMON 0070  
          __end_of_fputc 0210            __end_of_fputs 0114            __end_of_putch 005E  
           init@baudrate 0020                  ??_fputc 0073                  ??_fputs 0079  
                ??_putch 0070               __pbssBANK1 00A0               _analogRead 0145  
             __pmaintext 0177                  ?_strlen 0070                  _SP1BRGH 019C  
                _SP1BRGL 019B       __size_of_vfpfcnvrt 010E            ?_serial_getch 0070  
          ?_serial_print 0070            ?_serial_putch 0070                  ___aodiv 0478  
                ___aomod 038E                  ___lldiv 02C0                ?_vfprintf 005F  
                __ptext1 00C8                  __ptext2 0114                  __ptext3 0579  
                __ptext4 0687                  __ptext5 0267                  __ptext6 0076  
                __ptext7 00EC                  __ptext8 008F                  __ptext9 038E  
        __size_of_strlen 0019             __size_of_abs 001A             __size_of_pad 0059  
                _sprintf 00C8                  clrloop0 005F                  main@val 00E1  
   end_of_initialization 07FD                  fputc@fp 0072            analogRead@pin 0078  
          analogRead@val 0079                  fputs@fp 0078              ?_analogRead 0070  
        ___lldiv@divisor 0070          ___lldiv@counter 007D           ??_serial_getch 0070  
         ??_serial_print 0071        __end_of_vfpfcnvrt 0687           ??_serial_putch 0070  
             ??_vfprintf 0062                  strlen@a 0073                  strlen@s 0074  
             main@valStr 00D1              vfpfcnvrt@ap 004F              vfpfcnvrt@fp 005E  
            vfpfcnvrt@ll 0055           __end_of_strlen 008F      __size_of_analogRead 0032  
    start_initialization 07F5              __end_of_abs 00A9              __end_of_pad 02C0  
            vfprintf@fmt 005F                 ??_strlen 0072                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00C8         ___aodiv@dividend 0028  
   __end_of_serial_getch 006C     __end_of_serial_print 00C8     __end_of_serial_putch 0076  
               ?___aodiv 0020                 ?___aomod 0020         ___aodiv@quotient 0073  
               ?___lldiv 0070        __size_of_vfprintf 0031                 ?_sprintf 0067  
         __size_of_fputc 004F           __size_of_fputs 0028           __size_of_putch 0001  
           ??_analogRead 0072                clear_ram0 005E                 _GO_nDONE 04E9  
              _vfpfcnvrt 0579            serial_print@i 0072       __end_of_analogRead 0177  
             vfpfcnvrt@c 005D                init@portA 0024                init@portC 0025  
             vfprintf@ap 0061               vfprintf@fp 0064         __size_of___aodiv 0101  
       __size_of___aomod 00EA         __size_of___lldiv 005A               ?_vfpfcnvrt 004E  
        ___aodiv@divisor 0020    __size_of_serial_getch 0008          ___aodiv@counter 0071  
  __size_of_serial_print 001F    __size_of_serial_putch 000A               sprintf@fmt 0067  
               _dtoa$492 003B                 __ptext10 0478                 __ptext11 031A  
               __ptext12 01C1                 __ptext13 005D                 __ptext14 00A9  
               __ptext15 006C                 __ptext16 0064                 __ptext17 0210  
               __ptext18 02C0                 __ptext19 0145         __size_of_sprintf 0024  
          __size_of_ctoa 0074            __size_of_main 004A            __size_of_dtoa 016E  
          __size_of_init 0057             _serial_getch 0064             _serial_print 00A9  
           _serial_putch 006C                 _vfprintf 0114         ___aomod@dividend 0028  
              sprintf@ap 00CA         ___lldiv@dividend 0074          ___aomod@divisor 0020  
            ??_vfpfcnvrt 0050          ___aomod@counter 0071            __pstringtext1 0800  
          __pstringtext2 0000                 sprintf@f 00CC                 sprintf@s 00CB  
       ___lldiv@quotient 0079             ___aodiv@sign 0072             ___aomod@sign 0072  
